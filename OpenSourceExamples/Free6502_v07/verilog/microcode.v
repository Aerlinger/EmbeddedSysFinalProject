//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
//--  The Free IP Project
//--  Verilog Free-6502 Core
//--  (c) 1999, The Free IP Project and David Kessner
//--
//--
//--  FREE IP GENERAL PUBLIC LICENSE
//--  TERMS AND CONDITIONS FOR USE, COPYING, DISTRIBUTION, AND MODIFICATION
//--
//--  1.  You may copy and distribute verbatim copies of this core, as long
//--      as this file, and the other associated files, remain intact and
//--      unmodified.  Modifications are outlined below.  Also, see the
//--      import/export warning above for further restrictions on
//--      distribution.
//--  2.  You may use this core in any way, be it academic, commercial, or
//--      military.  Modified or not.  
//--  3.  Distribution of this core must be free of charge.  Charging is
//--      allowed only for value added services.  Value added services
//--      would include copying fees, modifications, customizations, and
//--      inclusion in other products.
//--  4.  If a modified source code is distributed, the original unmodified
//--      source code must also be included (or a link to the Free IP web
//--      site).  In the modified source code there must be clear
//--      identification of the modified version.
//--  5.  Visit the Free IP web site for additional information.
//--      http://www.free-ip.com
//--
//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
//--
//----------------------------------------------------------------------------
//--  Microcode Verilog file for 6502 CPU.  Created by mcgen_verilog.exe
//----------------------------------------------------------------------------

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
// The top level rom
module mc_rom (opcode, step, DONE, ADDR_OP, DIN_LE, RD_EN, DOUT_OP, DINT1_OP, DINT2_OP, DINT3_OP, PC_OP, SP_OP, ALU1, ALU2, ALU_OP, A_LE, X_LE, Y_LE, FLAG_OP);

    input   [ 7:0]  opcode;
    input   [ 2:0]  step;
    output          DONE;
    wire            DONE;
    output  [ 4:0]  ADDR_OP;
    wire    [ 4:0]  ADDR_OP;
    output          DIN_LE;
    wire            DIN_LE;
    output          RD_EN;
    wire            RD_EN;
    output  [ 2:0]  DOUT_OP;
    wire    [ 2:0]  DOUT_OP;
    output          DINT1_OP;
    wire            DINT1_OP;
    output          DINT2_OP;
    wire            DINT2_OP;
    output          DINT3_OP;
    wire            DINT3_OP;
    output  [ 3:0]  PC_OP;
    wire    [ 3:0]  PC_OP;
    output  [ 1:0]  SP_OP;
    wire    [ 1:0]  SP_OP;
    output  [ 1:0]  ALU1;
    wire    [ 1:0]  ALU1;
    output  [ 1:0]  ALU2;
    wire    [ 1:0]  ALU2;
    output  [ 3:0]  ALU_OP;
    wire    [ 3:0]  ALU_OP;
    output          A_LE;
    wire            A_LE;
    output          X_LE;
    wire            X_LE;
    output          Y_LE;
    wire            Y_LE;
    output  [ 3:0]  FLAG_OP;
    wire    [ 3:0]  FLAG_OP;
    wire    [10:0]  addr;

  assign addr = {opcode, step} ;

  DONE_rom U00 (addr, DONE);
  ADDR_OP_rom U01 (addr, ADDR_OP);
  DIN_LE_rom U02 (addr, DIN_LE);
  RD_EN_rom U03 (addr, RD_EN);
  DOUT_OP_rom U04 (addr, DOUT_OP);
  DINT1_OP_rom U05 (addr, DINT1_OP);
  DINT2_OP_rom U06 (addr, DINT2_OP);
  DINT3_OP_rom U07 (addr, DINT3_OP);
  PC_OP_rom U08 (addr, PC_OP);
  SP_OP_rom U09 (addr, SP_OP);
  ALU1_rom U10 (addr, ALU1);
  ALU2_rom U11 (addr, ALU2);
  ALU_OP_rom U12 (addr, ALU_OP);
  A_LE_rom U13 (addr, A_LE);
  X_LE_rom U14 (addr, X_LE);
  Y_LE_rom U15 (addr, Y_LE);
  FLAG_OP_rom U16 (addr, FLAG_OP);

endmodule

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
module DONE_rom (addr, DONE);

input   [10:0]  addr;
output          DONE;
reg             DONE;

parameter DONE_MC_NOP                  = 8'h00;
parameter DONE_MC_DONE                 = 8'h01;

always @ (addr)
  case (addr)
    11'b01101101011 : DONE <= DONE_MC_DONE;
    11'b01111101011 : DONE <= DONE_MC_DONE;
    11'b01111001011 : DONE <= DONE_MC_DONE;
    11'b01101001001 : DONE <= DONE_MC_DONE;
    11'b01100001101 : DONE <= DONE_MC_DONE;
    11'b01110001101 : DONE <= DONE_MC_DONE;
    11'b01100101010 : DONE <= DONE_MC_DONE;
    11'b01110101010 : DONE <= DONE_MC_DONE;
    11'b00101101011 : DONE <= DONE_MC_DONE;
    11'b00111101011 : DONE <= DONE_MC_DONE;
    11'b00111001011 : DONE <= DONE_MC_DONE;
    11'b00101001001 : DONE <= DONE_MC_DONE;
    11'b00100001101 : DONE <= DONE_MC_DONE;
    11'b00110001101 : DONE <= DONE_MC_DONE;
    11'b00100101010 : DONE <= DONE_MC_DONE;
    11'b00110101010 : DONE <= DONE_MC_DONE;
    11'b00001110110 : DONE <= DONE_MC_DONE;
    11'b00011110110 : DONE <= DONE_MC_DONE;
    11'b00001010000 : DONE <= DONE_MC_DONE;
    11'b00000110101 : DONE <= DONE_MC_DONE;
    11'b00010110101 : DONE <= DONE_MC_DONE;
    11'b10010000010 : DONE <= DONE_MC_DONE;
    11'b10110000010 : DONE <= DONE_MC_DONE;
    11'b11110000010 : DONE <= DONE_MC_DONE;
    11'b00101100011 : DONE <= DONE_MC_DONE;
    11'b00100100010 : DONE <= DONE_MC_DONE;
    11'b00110000010 : DONE <= DONE_MC_DONE;
    11'b11010000010 : DONE <= DONE_MC_DONE;
    11'b00010000010 : DONE <= DONE_MC_DONE;
    11'b00000000101 : DONE <= DONE_MC_DONE;
    11'b01010000010 : DONE <= DONE_MC_DONE;
    11'b01110000010 : DONE <= DONE_MC_DONE;
    11'b00011000000 : DONE <= DONE_MC_DONE;
    11'b11011000000 : DONE <= DONE_MC_DONE;
    11'b01011000000 : DONE <= DONE_MC_DONE;
    11'b10111000000 : DONE <= DONE_MC_DONE;
    11'b11001101011 : DONE <= DONE_MC_DONE;
    11'b11011101011 : DONE <= DONE_MC_DONE;
    11'b11011001011 : DONE <= DONE_MC_DONE;
    11'b11001001001 : DONE <= DONE_MC_DONE;
    11'b11000001101 : DONE <= DONE_MC_DONE;
    11'b11010001101 : DONE <= DONE_MC_DONE;
    11'b11000101010 : DONE <= DONE_MC_DONE;
    11'b11010101010 : DONE <= DONE_MC_DONE;
    11'b11101100011 : DONE <= DONE_MC_DONE;
    11'b11100000001 : DONE <= DONE_MC_DONE;
    11'b11100100010 : DONE <= DONE_MC_DONE;
    11'b11001100011 : DONE <= DONE_MC_DONE;
    11'b11000000001 : DONE <= DONE_MC_DONE;
    11'b11000100010 : DONE <= DONE_MC_DONE;
    11'b11001110110 : DONE <= DONE_MC_DONE;
    11'b11011110110 : DONE <= DONE_MC_DONE;
    11'b11000110101 : DONE <= DONE_MC_DONE;
    11'b11010110101 : DONE <= DONE_MC_DONE;
    11'b11001010000 : DONE <= DONE_MC_DONE;
    11'b10001000000 : DONE <= DONE_MC_DONE;
    11'b01001101011 : DONE <= DONE_MC_DONE;
    11'b01011101011 : DONE <= DONE_MC_DONE;
    11'b01011001011 : DONE <= DONE_MC_DONE;
    11'b01001001001 : DONE <= DONE_MC_DONE;
    11'b01000001101 : DONE <= DONE_MC_DONE;
    11'b01010001101 : DONE <= DONE_MC_DONE;
    11'b01000101010 : DONE <= DONE_MC_DONE;
    11'b01010101010 : DONE <= DONE_MC_DONE;
    11'b11101110110 : DONE <= DONE_MC_DONE;
    11'b11111110110 : DONE <= DONE_MC_DONE;
    11'b11100110101 : DONE <= DONE_MC_DONE;
    11'b11110110101 : DONE <= DONE_MC_DONE;
    11'b11101000000 : DONE <= DONE_MC_DONE;
    11'b11001000000 : DONE <= DONE_MC_DONE;
    11'b01001100011 : DONE <= DONE_MC_DONE;
    11'b01101100110 : DONE <= DONE_MC_DONE;
    11'b00100000011 : DONE <= DONE_MC_DONE;
    11'b10101101011 : DONE <= DONE_MC_DONE;
    11'b10111101011 : DONE <= DONE_MC_DONE;
    11'b10111001011 : DONE <= DONE_MC_DONE;
    11'b10101001001 : DONE <= DONE_MC_DONE;
    11'b10100101010 : DONE <= DONE_MC_DONE;
    11'b10100001101 : DONE <= DONE_MC_DONE;
    11'b10110001101 : DONE <= DONE_MC_DONE;
    11'b10110101010 : DONE <= DONE_MC_DONE;
    11'b10101110011 : DONE <= DONE_MC_DONE;
    11'b10111110011 : DONE <= DONE_MC_DONE;
    11'b10100010001 : DONE <= DONE_MC_DONE;
    11'b10100110010 : DONE <= DONE_MC_DONE;
    11'b10110110010 : DONE <= DONE_MC_DONE;
    11'b10101100011 : DONE <= DONE_MC_DONE;
    11'b10111100011 : DONE <= DONE_MC_DONE;
    11'b10100000001 : DONE <= DONE_MC_DONE;
    11'b10100100010 : DONE <= DONE_MC_DONE;
    11'b10110100010 : DONE <= DONE_MC_DONE;
    11'b01001110110 : DONE <= DONE_MC_DONE;
    11'b01011110110 : DONE <= DONE_MC_DONE;
    11'b01001010000 : DONE <= DONE_MC_DONE;
    11'b01000110101 : DONE <= DONE_MC_DONE;
    11'b01010110101 : DONE <= DONE_MC_DONE;
    11'b11101010000 : DONE <= DONE_MC_DONE;
    11'b00001101011 : DONE <= DONE_MC_DONE;
    11'b00011101011 : DONE <= DONE_MC_DONE;
    11'b00011001011 : DONE <= DONE_MC_DONE;
    11'b00001001001 : DONE <= DONE_MC_DONE;
    11'b00000001101 : DONE <= DONE_MC_DONE;
    11'b00010001101 : DONE <= DONE_MC_DONE;
    11'b00000101010 : DONE <= DONE_MC_DONE;
    11'b00010101010 : DONE <= DONE_MC_DONE;
    11'b01001000001 : DONE <= DONE_MC_DONE;
    11'b00001000001 : DONE <= DONE_MC_DONE;
    11'b01101000010 : DONE <= DONE_MC_DONE;
    11'b00101000010 : DONE <= DONE_MC_DONE;
    11'b00000011100 : DONE <= DONE_MC_DONE;
    11'b00101110110 : DONE <= DONE_MC_DONE;
    11'b00111110110 : DONE <= DONE_MC_DONE;
    11'b00101010000 : DONE <= DONE_MC_DONE;
    11'b00100110101 : DONE <= DONE_MC_DONE;
    11'b00110110101 : DONE <= DONE_MC_DONE;
    11'b01101110110 : DONE <= DONE_MC_DONE;
    11'b01111110110 : DONE <= DONE_MC_DONE;
    11'b01101010000 : DONE <= DONE_MC_DONE;
    11'b01100110101 : DONE <= DONE_MC_DONE;
    11'b01110110101 : DONE <= DONE_MC_DONE;
    11'b01000000110 : DONE <= DONE_MC_DONE;
    11'b01100000110 : DONE <= DONE_MC_DONE;
    11'b11101101011 : DONE <= DONE_MC_DONE;
    11'b11111101011 : DONE <= DONE_MC_DONE;
    11'b11111001011 : DONE <= DONE_MC_DONE;
    11'b11101001001 : DONE <= DONE_MC_DONE;
    11'b11100001101 : DONE <= DONE_MC_DONE;
    11'b11110001101 : DONE <= DONE_MC_DONE;
    11'b11100101010 : DONE <= DONE_MC_DONE;
    11'b11110101010 : DONE <= DONE_MC_DONE;
    11'b00111000000 : DONE <= DONE_MC_DONE;
    11'b11111000000 : DONE <= DONE_MC_DONE;
    11'b01111000000 : DONE <= DONE_MC_DONE;
    11'b10001101011 : DONE <= DONE_MC_DONE;
    11'b10011001011 : DONE <= DONE_MC_DONE;
    11'b10000001101 : DONE <= DONE_MC_DONE;
    11'b10010001101 : DONE <= DONE_MC_DONE;
    11'b10000101010 : DONE <= DONE_MC_DONE;
    11'b10010101010 : DONE <= DONE_MC_DONE;
    11'b10011101011 : DONE <= DONE_MC_DONE;
    11'b01000011110 : DONE <= DONE_MC_DONE;
    11'b00110011110 : DONE <= DONE_MC_DONE;
    11'b10001110011 : DONE <= DONE_MC_DONE;
    11'b10000110010 : DONE <= DONE_MC_DONE;
    11'b10010110010 : DONE <= DONE_MC_DONE;
    11'b10001100011 : DONE <= DONE_MC_DONE;
    11'b10000100010 : DONE <= DONE_MC_DONE;
    11'b10010100010 : DONE <= DONE_MC_DONE;
    11'b10101010000 : DONE <= DONE_MC_DONE;
    11'b10101000000 : DONE <= DONE_MC_DONE;
    11'b10111010000 : DONE <= DONE_MC_DONE;
    11'b10001010000 : DONE <= DONE_MC_DONE;
    11'b10011010000 : DONE <= DONE_MC_DONE;
    11'b10011000000 : DONE <= DONE_MC_DONE;
    default         : DONE <= DONE_MC_NOP;
  endcase

endmodule

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
module ADDR_OP_rom (addr, ADDR_OP);

input   [10:0]  addr;
output  [ 4:0]  ADDR_OP;
reg     [ 4:0]  ADDR_OP;

parameter ADDR_OP_MC_NOP                  = 8'h00;
parameter ADDR_OP_MC_PC_P                 = 8'h01;
parameter ADDR_OP_MC_SPLIT                = 8'h02;
parameter ADDR_OP_MC_SPLIT_X              = 8'h03;
parameter ADDR_OP_MC_SPLIT_Y              = 8'h04;
parameter ADDR_OP_MC_DIN_ZX               = 8'h05;
parameter ADDR_OP_MC_DIN_ZXP              = 8'h06;
parameter ADDR_OP_MC_DIN_Z                = 8'h07;
parameter ADDR_OP_MC_DIN_ZP               = 8'h08;
parameter ADDR_OP_MC_DINT16               = 8'h09;
parameter ADDR_OP_MC_DINT16_X             = 8'h0A;
parameter ADDR_OP_MC_DINT1_Z              = 8'h0B;
parameter ADDR_OP_MC_DINT1_ZX             = 8'h0C;
parameter ADDR_OP_MC_V_IRQ1               = 8'h0D;
parameter ADDR_OP_MC_V_IRQ2               = 8'h0E;
parameter ADDR_OP_MC_SP                   = 8'h0F;
parameter ADDR_OP_MC_SPLIT_P              = 8'h10;
parameter ADDR_OP_MC_DIN_ZY               = 8'h11;
parameter ADDR_OP_MC_V_RESET1             = 8'h12;
parameter ADDR_OP_MC_V_RESET2             = 8'h13;
parameter ADDR_OP_MC_V_NMI1               = 8'h14;
parameter ADDR_OP_MC_V_NMI2               = 8'h15;

always @ (addr)
  case (addr)
    11'b01101101000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b01101101010 : ADDR_OP <= ADDR_OP_MC_SPLIT;
    11'b01111101000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b01111101010 : ADDR_OP <= ADDR_OP_MC_SPLIT_X;
    11'b01111001000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b01111001010 : ADDR_OP <= ADDR_OP_MC_SPLIT_Y;
    11'b01100001001 : ADDR_OP <= ADDR_OP_MC_DIN_ZX;
    11'b01100001010 : ADDR_OP <= ADDR_OP_MC_DIN_ZXP;
    11'b01100001100 : ADDR_OP <= ADDR_OP_MC_SPLIT;
    11'b01110001001 : ADDR_OP <= ADDR_OP_MC_DIN_Z;
    11'b01110001010 : ADDR_OP <= ADDR_OP_MC_DIN_ZP;
    11'b01110001100 : ADDR_OP <= ADDR_OP_MC_SPLIT_Y;
    11'b01100101001 : ADDR_OP <= ADDR_OP_MC_DIN_Z;
    11'b01110101001 : ADDR_OP <= ADDR_OP_MC_DIN_ZX;
    11'b00101101000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b00101101010 : ADDR_OP <= ADDR_OP_MC_SPLIT;
    11'b00111101000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b00111101010 : ADDR_OP <= ADDR_OP_MC_SPLIT_X;
    11'b00111001000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b00111001010 : ADDR_OP <= ADDR_OP_MC_SPLIT_Y;
    11'b00100001001 : ADDR_OP <= ADDR_OP_MC_DIN_ZX;
    11'b00100001010 : ADDR_OP <= ADDR_OP_MC_DIN_ZXP;
    11'b00100001100 : ADDR_OP <= ADDR_OP_MC_SPLIT;
    11'b00110001001 : ADDR_OP <= ADDR_OP_MC_DIN_Z;
    11'b00110001010 : ADDR_OP <= ADDR_OP_MC_DIN_ZP;
    11'b00110001100 : ADDR_OP <= ADDR_OP_MC_SPLIT_Y;
    11'b00100101001 : ADDR_OP <= ADDR_OP_MC_DIN_Z;
    11'b00110101001 : ADDR_OP <= ADDR_OP_MC_DIN_ZX;
    11'b00001110000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b00001110010 : ADDR_OP <= ADDR_OP_MC_SPLIT;
    11'b00001110101 : ADDR_OP <= ADDR_OP_MC_DINT16;
    11'b00011110000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b00011110010 : ADDR_OP <= ADDR_OP_MC_SPLIT_X;
    11'b00011110101 : ADDR_OP <= ADDR_OP_MC_DINT16_X;
    11'b00000110001 : ADDR_OP <= ADDR_OP_MC_DIN_Z;
    11'b00000110100 : ADDR_OP <= ADDR_OP_MC_DINT1_Z;
    11'b00010110001 : ADDR_OP <= ADDR_OP_MC_DIN_ZX;
    11'b00010110100 : ADDR_OP <= ADDR_OP_MC_DINT1_ZX;
    11'b00101100000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b00101100010 : ADDR_OP <= ADDR_OP_MC_SPLIT;
    11'b00100100001 : ADDR_OP <= ADDR_OP_MC_DIN_Z;
    11'b00000000000 : ADDR_OP <= ADDR_OP_MC_V_IRQ1;
    11'b00000000001 : ADDR_OP <= ADDR_OP_MC_V_IRQ2;
    11'b00000000010 : ADDR_OP <= ADDR_OP_MC_SP;
    11'b00000000011 : ADDR_OP <= ADDR_OP_MC_SP;
    11'b00000000100 : ADDR_OP <= ADDR_OP_MC_SP;
    11'b11001101000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b11001101010 : ADDR_OP <= ADDR_OP_MC_SPLIT;
    11'b11011101000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b11011101010 : ADDR_OP <= ADDR_OP_MC_SPLIT_X;
    11'b11011001000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b11011001010 : ADDR_OP <= ADDR_OP_MC_SPLIT_Y;
    11'b11000001001 : ADDR_OP <= ADDR_OP_MC_DIN_ZX;
    11'b11000001010 : ADDR_OP <= ADDR_OP_MC_DIN_ZXP;
    11'b11000001100 : ADDR_OP <= ADDR_OP_MC_SPLIT;
    11'b11010001001 : ADDR_OP <= ADDR_OP_MC_DIN_Z;
    11'b11010001010 : ADDR_OP <= ADDR_OP_MC_DIN_ZP;
    11'b11010001100 : ADDR_OP <= ADDR_OP_MC_SPLIT_Y;
    11'b11000101001 : ADDR_OP <= ADDR_OP_MC_DIN_Z;
    11'b11010101001 : ADDR_OP <= ADDR_OP_MC_DIN_ZX;
    11'b11101100000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b11101100010 : ADDR_OP <= ADDR_OP_MC_SPLIT;
    11'b11100100001 : ADDR_OP <= ADDR_OP_MC_DIN_Z;
    11'b11001100000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b11001100010 : ADDR_OP <= ADDR_OP_MC_SPLIT;
    11'b11000100001 : ADDR_OP <= ADDR_OP_MC_DIN_Z;
    11'b11001110000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b11001110010 : ADDR_OP <= ADDR_OP_MC_SPLIT;
    11'b11001110101 : ADDR_OP <= ADDR_OP_MC_DINT16;
    11'b11011110000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b11011110010 : ADDR_OP <= ADDR_OP_MC_SPLIT_X;
    11'b11011110101 : ADDR_OP <= ADDR_OP_MC_DINT16_X;
    11'b11000110001 : ADDR_OP <= ADDR_OP_MC_DIN_Z;
    11'b11000110100 : ADDR_OP <= ADDR_OP_MC_DINT1_Z;
    11'b11010110001 : ADDR_OP <= ADDR_OP_MC_DIN_ZX;
    11'b11010110100 : ADDR_OP <= ADDR_OP_MC_DINT1_ZX;
    11'b01001101000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b01001101010 : ADDR_OP <= ADDR_OP_MC_SPLIT;
    11'b01011101000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b01011101010 : ADDR_OP <= ADDR_OP_MC_SPLIT_X;
    11'b01011001000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b01011001010 : ADDR_OP <= ADDR_OP_MC_SPLIT_Y;
    11'b01000001001 : ADDR_OP <= ADDR_OP_MC_DIN_ZX;
    11'b01000001010 : ADDR_OP <= ADDR_OP_MC_DIN_ZXP;
    11'b01000001100 : ADDR_OP <= ADDR_OP_MC_SPLIT;
    11'b01010001001 : ADDR_OP <= ADDR_OP_MC_DIN_Z;
    11'b01010001010 : ADDR_OP <= ADDR_OP_MC_DIN_ZP;
    11'b01010001100 : ADDR_OP <= ADDR_OP_MC_SPLIT_Y;
    11'b01000101001 : ADDR_OP <= ADDR_OP_MC_DIN_Z;
    11'b01010101001 : ADDR_OP <= ADDR_OP_MC_DIN_ZX;
    11'b11101110000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b11101110010 : ADDR_OP <= ADDR_OP_MC_SPLIT;
    11'b11101110101 : ADDR_OP <= ADDR_OP_MC_DINT16;
    11'b11111110000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b11111110010 : ADDR_OP <= ADDR_OP_MC_SPLIT_X;
    11'b11111110101 : ADDR_OP <= ADDR_OP_MC_DINT16_X;
    11'b11100110001 : ADDR_OP <= ADDR_OP_MC_DIN_Z;
    11'b11100110100 : ADDR_OP <= ADDR_OP_MC_DINT1_Z;
    11'b11110110001 : ADDR_OP <= ADDR_OP_MC_DIN_ZX;
    11'b11110110100 : ADDR_OP <= ADDR_OP_MC_DINT1_ZX;
    11'b01001100000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b01101100000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b01101100010 : ADDR_OP <= ADDR_OP_MC_SPLIT;
    11'b01101100011 : ADDR_OP <= ADDR_OP_MC_SPLIT_P;
    11'b00100000000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b00100000001 : ADDR_OP <= ADDR_OP_MC_SP;
    11'b00100000010 : ADDR_OP <= ADDR_OP_MC_SP;
    11'b10101101000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b10101101010 : ADDR_OP <= ADDR_OP_MC_SPLIT;
    11'b10111101000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b10111101010 : ADDR_OP <= ADDR_OP_MC_SPLIT_X;
    11'b10111001000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b10111001010 : ADDR_OP <= ADDR_OP_MC_SPLIT_Y;
    11'b10100101001 : ADDR_OP <= ADDR_OP_MC_DIN_Z;
    11'b10100001001 : ADDR_OP <= ADDR_OP_MC_DIN_ZX;
    11'b10100001010 : ADDR_OP <= ADDR_OP_MC_DIN_ZXP;
    11'b10100001100 : ADDR_OP <= ADDR_OP_MC_SPLIT;
    11'b10110001001 : ADDR_OP <= ADDR_OP_MC_DIN_Z;
    11'b10110001010 : ADDR_OP <= ADDR_OP_MC_DIN_ZP;
    11'b10110001100 : ADDR_OP <= ADDR_OP_MC_SPLIT_Y;
    11'b10110101001 : ADDR_OP <= ADDR_OP_MC_DIN_ZX;
    11'b10101110000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b10101110010 : ADDR_OP <= ADDR_OP_MC_SPLIT;
    11'b10111110000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b10111110010 : ADDR_OP <= ADDR_OP_MC_SPLIT_Y;
    11'b10100110001 : ADDR_OP <= ADDR_OP_MC_DIN_Z;
    11'b10110110001 : ADDR_OP <= ADDR_OP_MC_DIN_ZY;
    11'b10101100000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b10101100010 : ADDR_OP <= ADDR_OP_MC_SPLIT;
    11'b10111100000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b10111100010 : ADDR_OP <= ADDR_OP_MC_SPLIT_X;
    11'b10100100001 : ADDR_OP <= ADDR_OP_MC_DIN_Z;
    11'b10110100001 : ADDR_OP <= ADDR_OP_MC_DIN_ZX;
    11'b01001110000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b01001110010 : ADDR_OP <= ADDR_OP_MC_SPLIT;
    11'b01001110101 : ADDR_OP <= ADDR_OP_MC_DINT16;
    11'b01011110000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b01011110010 : ADDR_OP <= ADDR_OP_MC_SPLIT_X;
    11'b01011110101 : ADDR_OP <= ADDR_OP_MC_DINT16_X;
    11'b01000110001 : ADDR_OP <= ADDR_OP_MC_DIN_Z;
    11'b01000110100 : ADDR_OP <= ADDR_OP_MC_DINT1_Z;
    11'b01010110001 : ADDR_OP <= ADDR_OP_MC_DIN_ZX;
    11'b01010110100 : ADDR_OP <= ADDR_OP_MC_DINT1_ZX;
    11'b00001101000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b00001101010 : ADDR_OP <= ADDR_OP_MC_SPLIT;
    11'b00011101000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b00011101010 : ADDR_OP <= ADDR_OP_MC_SPLIT_X;
    11'b00011001000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b00011001010 : ADDR_OP <= ADDR_OP_MC_SPLIT_Y;
    11'b00000001001 : ADDR_OP <= ADDR_OP_MC_DIN_ZX;
    11'b00000001010 : ADDR_OP <= ADDR_OP_MC_DIN_ZXP;
    11'b00000001100 : ADDR_OP <= ADDR_OP_MC_SPLIT;
    11'b00010001001 : ADDR_OP <= ADDR_OP_MC_DIN_Z;
    11'b00010001010 : ADDR_OP <= ADDR_OP_MC_DIN_ZP;
    11'b00010001100 : ADDR_OP <= ADDR_OP_MC_SPLIT_Y;
    11'b00000101001 : ADDR_OP <= ADDR_OP_MC_DIN_Z;
    11'b00010101001 : ADDR_OP <= ADDR_OP_MC_DIN_ZX;
    11'b01001000000 : ADDR_OP <= ADDR_OP_MC_SP;
    11'b00001000000 : ADDR_OP <= ADDR_OP_MC_SP;
    11'b01101000001 : ADDR_OP <= ADDR_OP_MC_SP;
    11'b00101000001 : ADDR_OP <= ADDR_OP_MC_SP;
    11'b00000011000 : ADDR_OP <= ADDR_OP_MC_V_RESET1;
    11'b00000011001 : ADDR_OP <= ADDR_OP_MC_V_RESET2;
    11'b00101110000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b00101110010 : ADDR_OP <= ADDR_OP_MC_SPLIT;
    11'b00101110101 : ADDR_OP <= ADDR_OP_MC_DINT16;
    11'b00111110000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b00111110010 : ADDR_OP <= ADDR_OP_MC_SPLIT_X;
    11'b00111110101 : ADDR_OP <= ADDR_OP_MC_DINT16_X;
    11'b00100110001 : ADDR_OP <= ADDR_OP_MC_DIN_Z;
    11'b00100110100 : ADDR_OP <= ADDR_OP_MC_DINT1_Z;
    11'b00110110001 : ADDR_OP <= ADDR_OP_MC_DIN_ZX;
    11'b00110110100 : ADDR_OP <= ADDR_OP_MC_DINT1_ZX;
    11'b01101110000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b01101110010 : ADDR_OP <= ADDR_OP_MC_SPLIT;
    11'b01101110101 : ADDR_OP <= ADDR_OP_MC_DINT16;
    11'b01111110000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b01111110010 : ADDR_OP <= ADDR_OP_MC_SPLIT_X;
    11'b01111110101 : ADDR_OP <= ADDR_OP_MC_DINT16_X;
    11'b01100110001 : ADDR_OP <= ADDR_OP_MC_DIN_Z;
    11'b01100110100 : ADDR_OP <= ADDR_OP_MC_DINT1_Z;
    11'b01110110001 : ADDR_OP <= ADDR_OP_MC_DIN_ZX;
    11'b01110110100 : ADDR_OP <= ADDR_OP_MC_DINT1_ZX;
    11'b01000000001 : ADDR_OP <= ADDR_OP_MC_SP;
    11'b01000000010 : ADDR_OP <= ADDR_OP_MC_SP;
    11'b01000000011 : ADDR_OP <= ADDR_OP_MC_SP;
    11'b01100000001 : ADDR_OP <= ADDR_OP_MC_SP;
    11'b01100000010 : ADDR_OP <= ADDR_OP_MC_SP;
    11'b11101101000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b11101101010 : ADDR_OP <= ADDR_OP_MC_SPLIT;
    11'b11111101000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b11111101010 : ADDR_OP <= ADDR_OP_MC_SPLIT_X;
    11'b11111001000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b11111001010 : ADDR_OP <= ADDR_OP_MC_SPLIT_Y;
    11'b11100001001 : ADDR_OP <= ADDR_OP_MC_DIN_ZX;
    11'b11100001010 : ADDR_OP <= ADDR_OP_MC_DIN_ZXP;
    11'b11100001100 : ADDR_OP <= ADDR_OP_MC_SPLIT;
    11'b11110001001 : ADDR_OP <= ADDR_OP_MC_DIN_Z;
    11'b11110001010 : ADDR_OP <= ADDR_OP_MC_DIN_ZP;
    11'b11110001100 : ADDR_OP <= ADDR_OP_MC_SPLIT_Y;
    11'b11100101001 : ADDR_OP <= ADDR_OP_MC_DIN_Z;
    11'b11110101001 : ADDR_OP <= ADDR_OP_MC_DIN_ZX;
    11'b10001101000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b10001101010 : ADDR_OP <= ADDR_OP_MC_SPLIT;
    11'b10011001000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b10011001010 : ADDR_OP <= ADDR_OP_MC_SPLIT_Y;
    11'b10000001001 : ADDR_OP <= ADDR_OP_MC_DIN_ZX;
    11'b10000001010 : ADDR_OP <= ADDR_OP_MC_DIN_ZXP;
    11'b10000001100 : ADDR_OP <= ADDR_OP_MC_SPLIT;
    11'b10010001001 : ADDR_OP <= ADDR_OP_MC_DIN_Z;
    11'b10010001010 : ADDR_OP <= ADDR_OP_MC_DIN_ZP;
    11'b10010001100 : ADDR_OP <= ADDR_OP_MC_SPLIT_Y;
    11'b10000101001 : ADDR_OP <= ADDR_OP_MC_DIN_Z;
    11'b10010101001 : ADDR_OP <= ADDR_OP_MC_DIN_ZX;
    11'b10011101000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b10011101010 : ADDR_OP <= ADDR_OP_MC_SPLIT_X;
    11'b01000011000 : ADDR_OP <= ADDR_OP_MC_V_IRQ1;
    11'b01000011001 : ADDR_OP <= ADDR_OP_MC_V_IRQ2;
    11'b01000011010 : ADDR_OP <= ADDR_OP_MC_SP;
    11'b01000011011 : ADDR_OP <= ADDR_OP_MC_SP;
    11'b01000011100 : ADDR_OP <= ADDR_OP_MC_SP;
    11'b00110011000 : ADDR_OP <= ADDR_OP_MC_V_NMI1;
    11'b00110011001 : ADDR_OP <= ADDR_OP_MC_V_NMI2;
    11'b00110011010 : ADDR_OP <= ADDR_OP_MC_SP;
    11'b00110011011 : ADDR_OP <= ADDR_OP_MC_SP;
    11'b00110011100 : ADDR_OP <= ADDR_OP_MC_SP;
    11'b10001110000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b10001110010 : ADDR_OP <= ADDR_OP_MC_SPLIT;
    11'b10000110001 : ADDR_OP <= ADDR_OP_MC_DIN_Z;
    11'b10010110001 : ADDR_OP <= ADDR_OP_MC_DIN_ZY;
    11'b10001100000 : ADDR_OP <= ADDR_OP_MC_PC_P;
    11'b10001100010 : ADDR_OP <= ADDR_OP_MC_SPLIT;
    11'b10000100001 : ADDR_OP <= ADDR_OP_MC_DIN_Z;
    11'b10010100001 : ADDR_OP <= ADDR_OP_MC_DIN_ZX;
    default         : ADDR_OP <= ADDR_OP_MC_NOP;
  endcase

endmodule

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
module DIN_LE_rom (addr, DIN_LE);

input   [10:0]  addr;
output          DIN_LE;
reg             DIN_LE;

parameter DIN_LE_MC_NOP                  = 8'h00;
parameter DIN_LE_MC_EN                   = 8'h01;

always @ (addr)
  case (addr)
    11'b01101101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b01101101001 : DIN_LE <= DIN_LE_MC_EN;
    11'b01101101011 : DIN_LE <= DIN_LE_MC_EN;
    11'b01111101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b01111101001 : DIN_LE <= DIN_LE_MC_EN;
    11'b01111101011 : DIN_LE <= DIN_LE_MC_EN;
    11'b01111001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b01111001001 : DIN_LE <= DIN_LE_MC_EN;
    11'b01111001011 : DIN_LE <= DIN_LE_MC_EN;
    11'b01101001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b01100001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b01100001010 : DIN_LE <= DIN_LE_MC_EN;
    11'b01100001011 : DIN_LE <= DIN_LE_MC_EN;
    11'b01100001101 : DIN_LE <= DIN_LE_MC_EN;
    11'b01110001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b01110001010 : DIN_LE <= DIN_LE_MC_EN;
    11'b01110001011 : DIN_LE <= DIN_LE_MC_EN;
    11'b01110001101 : DIN_LE <= DIN_LE_MC_EN;
    11'b01100101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b01100101010 : DIN_LE <= DIN_LE_MC_EN;
    11'b01110101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b01110101010 : DIN_LE <= DIN_LE_MC_EN;
    11'b00101101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b00101101001 : DIN_LE <= DIN_LE_MC_EN;
    11'b00101101011 : DIN_LE <= DIN_LE_MC_EN;
    11'b00111101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b00111101001 : DIN_LE <= DIN_LE_MC_EN;
    11'b00111101011 : DIN_LE <= DIN_LE_MC_EN;
    11'b00111001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b00111001001 : DIN_LE <= DIN_LE_MC_EN;
    11'b00111001011 : DIN_LE <= DIN_LE_MC_EN;
    11'b00101001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b00100001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b00100001010 : DIN_LE <= DIN_LE_MC_EN;
    11'b00100001011 : DIN_LE <= DIN_LE_MC_EN;
    11'b00100001101 : DIN_LE <= DIN_LE_MC_EN;
    11'b00110001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b00110001010 : DIN_LE <= DIN_LE_MC_EN;
    11'b00110001011 : DIN_LE <= DIN_LE_MC_EN;
    11'b00110001101 : DIN_LE <= DIN_LE_MC_EN;
    11'b00100101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b00100101010 : DIN_LE <= DIN_LE_MC_EN;
    11'b00110101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b00110101010 : DIN_LE <= DIN_LE_MC_EN;
    11'b00001110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b00001110001 : DIN_LE <= DIN_LE_MC_EN;
    11'b00001110011 : DIN_LE <= DIN_LE_MC_EN;
    11'b00011110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b00011110001 : DIN_LE <= DIN_LE_MC_EN;
    11'b00011110011 : DIN_LE <= DIN_LE_MC_EN;
    11'b00000110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b00000110010 : DIN_LE <= DIN_LE_MC_EN;
    11'b00010110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b00010110010 : DIN_LE <= DIN_LE_MC_EN;
    11'b10010000000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10110000000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11110000000 : DIN_LE <= DIN_LE_MC_EN;
    11'b00101100000 : DIN_LE <= DIN_LE_MC_EN;
    11'b00101100001 : DIN_LE <= DIN_LE_MC_EN;
    11'b00101100011 : DIN_LE <= DIN_LE_MC_EN;
    11'b00100100000 : DIN_LE <= DIN_LE_MC_EN;
    11'b00100100010 : DIN_LE <= DIN_LE_MC_EN;
    11'b00110000000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11010000000 : DIN_LE <= DIN_LE_MC_EN;
    11'b00010000000 : DIN_LE <= DIN_LE_MC_EN;
    11'b00000000001 : DIN_LE <= DIN_LE_MC_EN;
    11'b00000000010 : DIN_LE <= DIN_LE_MC_EN;
    11'b01010000000 : DIN_LE <= DIN_LE_MC_EN;
    11'b01110000000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11001101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11001101001 : DIN_LE <= DIN_LE_MC_EN;
    11'b11001101011 : DIN_LE <= DIN_LE_MC_EN;
    11'b11011101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11011101001 : DIN_LE <= DIN_LE_MC_EN;
    11'b11011101011 : DIN_LE <= DIN_LE_MC_EN;
    11'b11011001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11011001001 : DIN_LE <= DIN_LE_MC_EN;
    11'b11011001011 : DIN_LE <= DIN_LE_MC_EN;
    11'b11001001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11000001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11000001010 : DIN_LE <= DIN_LE_MC_EN;
    11'b11000001011 : DIN_LE <= DIN_LE_MC_EN;
    11'b11000001101 : DIN_LE <= DIN_LE_MC_EN;
    11'b11010001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11010001010 : DIN_LE <= DIN_LE_MC_EN;
    11'b11010001011 : DIN_LE <= DIN_LE_MC_EN;
    11'b11010001101 : DIN_LE <= DIN_LE_MC_EN;
    11'b11000101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11000101010 : DIN_LE <= DIN_LE_MC_EN;
    11'b11010101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11010101010 : DIN_LE <= DIN_LE_MC_EN;
    11'b11101100000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11101100001 : DIN_LE <= DIN_LE_MC_EN;
    11'b11101100011 : DIN_LE <= DIN_LE_MC_EN;
    11'b11100000000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11100100000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11100100010 : DIN_LE <= DIN_LE_MC_EN;
    11'b11001100000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11001100001 : DIN_LE <= DIN_LE_MC_EN;
    11'b11001100011 : DIN_LE <= DIN_LE_MC_EN;
    11'b11000000000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11000100000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11000100010 : DIN_LE <= DIN_LE_MC_EN;
    11'b11001110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11001110001 : DIN_LE <= DIN_LE_MC_EN;
    11'b11001110011 : DIN_LE <= DIN_LE_MC_EN;
    11'b11011110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11011110001 : DIN_LE <= DIN_LE_MC_EN;
    11'b11011110011 : DIN_LE <= DIN_LE_MC_EN;
    11'b11000110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11000110010 : DIN_LE <= DIN_LE_MC_EN;
    11'b11010110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11010110010 : DIN_LE <= DIN_LE_MC_EN;
    11'b01001101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b01001101001 : DIN_LE <= DIN_LE_MC_EN;
    11'b01001101011 : DIN_LE <= DIN_LE_MC_EN;
    11'b01011101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b01011101001 : DIN_LE <= DIN_LE_MC_EN;
    11'b01011101011 : DIN_LE <= DIN_LE_MC_EN;
    11'b01011001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b01011001001 : DIN_LE <= DIN_LE_MC_EN;
    11'b01011001011 : DIN_LE <= DIN_LE_MC_EN;
    11'b01001001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b01000001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b01000001010 : DIN_LE <= DIN_LE_MC_EN;
    11'b01000001011 : DIN_LE <= DIN_LE_MC_EN;
    11'b01000001101 : DIN_LE <= DIN_LE_MC_EN;
    11'b01010001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b01010001010 : DIN_LE <= DIN_LE_MC_EN;
    11'b01010001011 : DIN_LE <= DIN_LE_MC_EN;
    11'b01010001101 : DIN_LE <= DIN_LE_MC_EN;
    11'b01000101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b01000101010 : DIN_LE <= DIN_LE_MC_EN;
    11'b01010101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b01010101010 : DIN_LE <= DIN_LE_MC_EN;
    11'b11101110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11101110001 : DIN_LE <= DIN_LE_MC_EN;
    11'b11101110011 : DIN_LE <= DIN_LE_MC_EN;
    11'b11111110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11111110001 : DIN_LE <= DIN_LE_MC_EN;
    11'b11111110011 : DIN_LE <= DIN_LE_MC_EN;
    11'b11100110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11100110010 : DIN_LE <= DIN_LE_MC_EN;
    11'b11110110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11110110010 : DIN_LE <= DIN_LE_MC_EN;
    11'b01001100000 : DIN_LE <= DIN_LE_MC_EN;
    11'b01001100001 : DIN_LE <= DIN_LE_MC_EN;
    11'b01101100000 : DIN_LE <= DIN_LE_MC_EN;
    11'b01101100001 : DIN_LE <= DIN_LE_MC_EN;
    11'b01101100011 : DIN_LE <= DIN_LE_MC_EN;
    11'b01101100100 : DIN_LE <= DIN_LE_MC_EN;
    11'b00100000000 : DIN_LE <= DIN_LE_MC_EN;
    11'b00100000001 : DIN_LE <= DIN_LE_MC_EN;
    11'b10101101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10101101001 : DIN_LE <= DIN_LE_MC_EN;
    11'b10101101011 : DIN_LE <= DIN_LE_MC_EN;
    11'b10111101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10111101001 : DIN_LE <= DIN_LE_MC_EN;
    11'b10111101011 : DIN_LE <= DIN_LE_MC_EN;
    11'b10111001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10111001001 : DIN_LE <= DIN_LE_MC_EN;
    11'b10111001011 : DIN_LE <= DIN_LE_MC_EN;
    11'b10101001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10100101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10100101010 : DIN_LE <= DIN_LE_MC_EN;
    11'b10100001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10100001010 : DIN_LE <= DIN_LE_MC_EN;
    11'b10100001011 : DIN_LE <= DIN_LE_MC_EN;
    11'b10100001101 : DIN_LE <= DIN_LE_MC_EN;
    11'b10110001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10110001010 : DIN_LE <= DIN_LE_MC_EN;
    11'b10110001011 : DIN_LE <= DIN_LE_MC_EN;
    11'b10110001101 : DIN_LE <= DIN_LE_MC_EN;
    11'b10110101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10110101010 : DIN_LE <= DIN_LE_MC_EN;
    11'b10101110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10101110001 : DIN_LE <= DIN_LE_MC_EN;
    11'b10101110011 : DIN_LE <= DIN_LE_MC_EN;
    11'b10111110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10111110001 : DIN_LE <= DIN_LE_MC_EN;
    11'b10111110011 : DIN_LE <= DIN_LE_MC_EN;
    11'b10100010000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10100110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10100110010 : DIN_LE <= DIN_LE_MC_EN;
    11'b10110110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10110110010 : DIN_LE <= DIN_LE_MC_EN;
    11'b10101100000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10101100001 : DIN_LE <= DIN_LE_MC_EN;
    11'b10101100011 : DIN_LE <= DIN_LE_MC_EN;
    11'b10111100000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10111100001 : DIN_LE <= DIN_LE_MC_EN;
    11'b10111100011 : DIN_LE <= DIN_LE_MC_EN;
    11'b10100000000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10100100000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10100100010 : DIN_LE <= DIN_LE_MC_EN;
    11'b10110100000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10110100010 : DIN_LE <= DIN_LE_MC_EN;
    11'b01001110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b01001110001 : DIN_LE <= DIN_LE_MC_EN;
    11'b01001110011 : DIN_LE <= DIN_LE_MC_EN;
    11'b01011110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b01011110001 : DIN_LE <= DIN_LE_MC_EN;
    11'b01011110011 : DIN_LE <= DIN_LE_MC_EN;
    11'b01000110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b01000110010 : DIN_LE <= DIN_LE_MC_EN;
    11'b01010110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b01010110010 : DIN_LE <= DIN_LE_MC_EN;
    11'b00001101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b00001101001 : DIN_LE <= DIN_LE_MC_EN;
    11'b00001101011 : DIN_LE <= DIN_LE_MC_EN;
    11'b00011101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b00011101001 : DIN_LE <= DIN_LE_MC_EN;
    11'b00011101011 : DIN_LE <= DIN_LE_MC_EN;
    11'b00011001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b00011001001 : DIN_LE <= DIN_LE_MC_EN;
    11'b00011001011 : DIN_LE <= DIN_LE_MC_EN;
    11'b00001001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b00000001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b00000001010 : DIN_LE <= DIN_LE_MC_EN;
    11'b00000001011 : DIN_LE <= DIN_LE_MC_EN;
    11'b00000001101 : DIN_LE <= DIN_LE_MC_EN;
    11'b00010001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b00010001010 : DIN_LE <= DIN_LE_MC_EN;
    11'b00010001011 : DIN_LE <= DIN_LE_MC_EN;
    11'b00010001101 : DIN_LE <= DIN_LE_MC_EN;
    11'b00000101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b00000101010 : DIN_LE <= DIN_LE_MC_EN;
    11'b00010101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b00010101010 : DIN_LE <= DIN_LE_MC_EN;
    11'b01101000010 : DIN_LE <= DIN_LE_MC_EN;
    11'b00101000010 : DIN_LE <= DIN_LE_MC_EN;
    11'b00000011001 : DIN_LE <= DIN_LE_MC_EN;
    11'b00000011010 : DIN_LE <= DIN_LE_MC_EN;
    11'b00101110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b00101110001 : DIN_LE <= DIN_LE_MC_EN;
    11'b00101110011 : DIN_LE <= DIN_LE_MC_EN;
    11'b00111110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b00111110001 : DIN_LE <= DIN_LE_MC_EN;
    11'b00111110011 : DIN_LE <= DIN_LE_MC_EN;
    11'b00100110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b00100110010 : DIN_LE <= DIN_LE_MC_EN;
    11'b00110110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b00110110010 : DIN_LE <= DIN_LE_MC_EN;
    11'b01101110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b01101110001 : DIN_LE <= DIN_LE_MC_EN;
    11'b01101110011 : DIN_LE <= DIN_LE_MC_EN;
    11'b01111110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b01111110001 : DIN_LE <= DIN_LE_MC_EN;
    11'b01111110011 : DIN_LE <= DIN_LE_MC_EN;
    11'b01100110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b01100110010 : DIN_LE <= DIN_LE_MC_EN;
    11'b01110110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b01110110010 : DIN_LE <= DIN_LE_MC_EN;
    11'b01000000010 : DIN_LE <= DIN_LE_MC_EN;
    11'b01000000011 : DIN_LE <= DIN_LE_MC_EN;
    11'b01000000100 : DIN_LE <= DIN_LE_MC_EN;
    11'b01100000010 : DIN_LE <= DIN_LE_MC_EN;
    11'b01100000011 : DIN_LE <= DIN_LE_MC_EN;
    11'b11101101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11101101001 : DIN_LE <= DIN_LE_MC_EN;
    11'b11101101011 : DIN_LE <= DIN_LE_MC_EN;
    11'b11111101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11111101001 : DIN_LE <= DIN_LE_MC_EN;
    11'b11111101011 : DIN_LE <= DIN_LE_MC_EN;
    11'b11111001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11111001001 : DIN_LE <= DIN_LE_MC_EN;
    11'b11111001011 : DIN_LE <= DIN_LE_MC_EN;
    11'b11101001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11100001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11100001010 : DIN_LE <= DIN_LE_MC_EN;
    11'b11100001011 : DIN_LE <= DIN_LE_MC_EN;
    11'b11100001101 : DIN_LE <= DIN_LE_MC_EN;
    11'b11110001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11110001010 : DIN_LE <= DIN_LE_MC_EN;
    11'b11110001011 : DIN_LE <= DIN_LE_MC_EN;
    11'b11110001101 : DIN_LE <= DIN_LE_MC_EN;
    11'b11100101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11100101010 : DIN_LE <= DIN_LE_MC_EN;
    11'b11110101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b11110101010 : DIN_LE <= DIN_LE_MC_EN;
    11'b10001101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10001101001 : DIN_LE <= DIN_LE_MC_EN;
    11'b10011001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10011001001 : DIN_LE <= DIN_LE_MC_EN;
    11'b10000001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10000001010 : DIN_LE <= DIN_LE_MC_EN;
    11'b10000001011 : DIN_LE <= DIN_LE_MC_EN;
    11'b10010001000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10010001010 : DIN_LE <= DIN_LE_MC_EN;
    11'b10010001011 : DIN_LE <= DIN_LE_MC_EN;
    11'b10000101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10010101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10011101000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10011101001 : DIN_LE <= DIN_LE_MC_EN;
    11'b01000011001 : DIN_LE <= DIN_LE_MC_EN;
    11'b01000011010 : DIN_LE <= DIN_LE_MC_EN;
    11'b00110011001 : DIN_LE <= DIN_LE_MC_EN;
    11'b00110011010 : DIN_LE <= DIN_LE_MC_EN;
    11'b10001110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10001110001 : DIN_LE <= DIN_LE_MC_EN;
    11'b10000110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10010110000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10001100000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10001100001 : DIN_LE <= DIN_LE_MC_EN;
    11'b10000100000 : DIN_LE <= DIN_LE_MC_EN;
    11'b10010100000 : DIN_LE <= DIN_LE_MC_EN;
    default         : DIN_LE <= DIN_LE_MC_NOP;
  endcase

endmodule

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
module RD_EN_rom (addr, RD_EN);

input   [10:0]  addr;
output          RD_EN;
reg             RD_EN;

parameter RD_EN_MC_NOP                  = 8'h00;
parameter RD_EN_MC_READ                 = 8'h01;

always @ (addr)
  case (addr)
    11'b01101101000 : RD_EN <= RD_EN_MC_READ;
    11'b01101101010 : RD_EN <= RD_EN_MC_READ;
    11'b01111101000 : RD_EN <= RD_EN_MC_READ;
    11'b01111101010 : RD_EN <= RD_EN_MC_READ;
    11'b01111001000 : RD_EN <= RD_EN_MC_READ;
    11'b01111001010 : RD_EN <= RD_EN_MC_READ;
    11'b01100001001 : RD_EN <= RD_EN_MC_READ;
    11'b01100001010 : RD_EN <= RD_EN_MC_READ;
    11'b01100001100 : RD_EN <= RD_EN_MC_READ;
    11'b01110001001 : RD_EN <= RD_EN_MC_READ;
    11'b01110001010 : RD_EN <= RD_EN_MC_READ;
    11'b01110001100 : RD_EN <= RD_EN_MC_READ;
    11'b01100101001 : RD_EN <= RD_EN_MC_READ;
    11'b01110101001 : RD_EN <= RD_EN_MC_READ;
    11'b00101101000 : RD_EN <= RD_EN_MC_READ;
    11'b00101101010 : RD_EN <= RD_EN_MC_READ;
    11'b00111101000 : RD_EN <= RD_EN_MC_READ;
    11'b00111101010 : RD_EN <= RD_EN_MC_READ;
    11'b00111001000 : RD_EN <= RD_EN_MC_READ;
    11'b00111001010 : RD_EN <= RD_EN_MC_READ;
    11'b00100001001 : RD_EN <= RD_EN_MC_READ;
    11'b00100001010 : RD_EN <= RD_EN_MC_READ;
    11'b00100001100 : RD_EN <= RD_EN_MC_READ;
    11'b00110001001 : RD_EN <= RD_EN_MC_READ;
    11'b00110001010 : RD_EN <= RD_EN_MC_READ;
    11'b00110001100 : RD_EN <= RD_EN_MC_READ;
    11'b00100101001 : RD_EN <= RD_EN_MC_READ;
    11'b00110101001 : RD_EN <= RD_EN_MC_READ;
    11'b00001110000 : RD_EN <= RD_EN_MC_READ;
    11'b00001110010 : RD_EN <= RD_EN_MC_READ;
    11'b00011110000 : RD_EN <= RD_EN_MC_READ;
    11'b00011110010 : RD_EN <= RD_EN_MC_READ;
    11'b00000110001 : RD_EN <= RD_EN_MC_READ;
    11'b00010110001 : RD_EN <= RD_EN_MC_READ;
    11'b00101100000 : RD_EN <= RD_EN_MC_READ;
    11'b00101100010 : RD_EN <= RD_EN_MC_READ;
    11'b00100100001 : RD_EN <= RD_EN_MC_READ;
    11'b00000000000 : RD_EN <= RD_EN_MC_READ;
    11'b00000000001 : RD_EN <= RD_EN_MC_READ;
    11'b11001101000 : RD_EN <= RD_EN_MC_READ;
    11'b11001101010 : RD_EN <= RD_EN_MC_READ;
    11'b11011101000 : RD_EN <= RD_EN_MC_READ;
    11'b11011101010 : RD_EN <= RD_EN_MC_READ;
    11'b11011001000 : RD_EN <= RD_EN_MC_READ;
    11'b11011001010 : RD_EN <= RD_EN_MC_READ;
    11'b11000001001 : RD_EN <= RD_EN_MC_READ;
    11'b11000001010 : RD_EN <= RD_EN_MC_READ;
    11'b11000001100 : RD_EN <= RD_EN_MC_READ;
    11'b11010001001 : RD_EN <= RD_EN_MC_READ;
    11'b11010001010 : RD_EN <= RD_EN_MC_READ;
    11'b11010001100 : RD_EN <= RD_EN_MC_READ;
    11'b11000101001 : RD_EN <= RD_EN_MC_READ;
    11'b11010101001 : RD_EN <= RD_EN_MC_READ;
    11'b11101100000 : RD_EN <= RD_EN_MC_READ;
    11'b11101100010 : RD_EN <= RD_EN_MC_READ;
    11'b11100100001 : RD_EN <= RD_EN_MC_READ;
    11'b11001100000 : RD_EN <= RD_EN_MC_READ;
    11'b11001100010 : RD_EN <= RD_EN_MC_READ;
    11'b11000100001 : RD_EN <= RD_EN_MC_READ;
    11'b11001110000 : RD_EN <= RD_EN_MC_READ;
    11'b11001110010 : RD_EN <= RD_EN_MC_READ;
    11'b11011110000 : RD_EN <= RD_EN_MC_READ;
    11'b11011110010 : RD_EN <= RD_EN_MC_READ;
    11'b11000110001 : RD_EN <= RD_EN_MC_READ;
    11'b11010110001 : RD_EN <= RD_EN_MC_READ;
    11'b01001101000 : RD_EN <= RD_EN_MC_READ;
    11'b01001101010 : RD_EN <= RD_EN_MC_READ;
    11'b01011101000 : RD_EN <= RD_EN_MC_READ;
    11'b01011101010 : RD_EN <= RD_EN_MC_READ;
    11'b01011001000 : RD_EN <= RD_EN_MC_READ;
    11'b01011001010 : RD_EN <= RD_EN_MC_READ;
    11'b01000001001 : RD_EN <= RD_EN_MC_READ;
    11'b01000001010 : RD_EN <= RD_EN_MC_READ;
    11'b01000001100 : RD_EN <= RD_EN_MC_READ;
    11'b01010001001 : RD_EN <= RD_EN_MC_READ;
    11'b01010001010 : RD_EN <= RD_EN_MC_READ;
    11'b01010001100 : RD_EN <= RD_EN_MC_READ;
    11'b01000101001 : RD_EN <= RD_EN_MC_READ;
    11'b01010101001 : RD_EN <= RD_EN_MC_READ;
    11'b11101110000 : RD_EN <= RD_EN_MC_READ;
    11'b11101110010 : RD_EN <= RD_EN_MC_READ;
    11'b11111110000 : RD_EN <= RD_EN_MC_READ;
    11'b11111110010 : RD_EN <= RD_EN_MC_READ;
    11'b11100110001 : RD_EN <= RD_EN_MC_READ;
    11'b11110110001 : RD_EN <= RD_EN_MC_READ;
    11'b01001100000 : RD_EN <= RD_EN_MC_READ;
    11'b01101100000 : RD_EN <= RD_EN_MC_READ;
    11'b01101100010 : RD_EN <= RD_EN_MC_READ;
    11'b01101100011 : RD_EN <= RD_EN_MC_READ;
    11'b00100000000 : RD_EN <= RD_EN_MC_READ;
    11'b10101101000 : RD_EN <= RD_EN_MC_READ;
    11'b10101101010 : RD_EN <= RD_EN_MC_READ;
    11'b10111101000 : RD_EN <= RD_EN_MC_READ;
    11'b10111101010 : RD_EN <= RD_EN_MC_READ;
    11'b10111001000 : RD_EN <= RD_EN_MC_READ;
    11'b10111001010 : RD_EN <= RD_EN_MC_READ;
    11'b10100101001 : RD_EN <= RD_EN_MC_READ;
    11'b10100001001 : RD_EN <= RD_EN_MC_READ;
    11'b10100001010 : RD_EN <= RD_EN_MC_READ;
    11'b10100001100 : RD_EN <= RD_EN_MC_READ;
    11'b10110001001 : RD_EN <= RD_EN_MC_READ;
    11'b10110001010 : RD_EN <= RD_EN_MC_READ;
    11'b10110001100 : RD_EN <= RD_EN_MC_READ;
    11'b10110101001 : RD_EN <= RD_EN_MC_READ;
    11'b10101110000 : RD_EN <= RD_EN_MC_READ;
    11'b10101110010 : RD_EN <= RD_EN_MC_READ;
    11'b10111110000 : RD_EN <= RD_EN_MC_READ;
    11'b10111110010 : RD_EN <= RD_EN_MC_READ;
    11'b10100110001 : RD_EN <= RD_EN_MC_READ;
    11'b10110110001 : RD_EN <= RD_EN_MC_READ;
    11'b10101100000 : RD_EN <= RD_EN_MC_READ;
    11'b10101100010 : RD_EN <= RD_EN_MC_READ;
    11'b10111100000 : RD_EN <= RD_EN_MC_READ;
    11'b10111100010 : RD_EN <= RD_EN_MC_READ;
    11'b10100100001 : RD_EN <= RD_EN_MC_READ;
    11'b10110100001 : RD_EN <= RD_EN_MC_READ;
    11'b01001110000 : RD_EN <= RD_EN_MC_READ;
    11'b01001110010 : RD_EN <= RD_EN_MC_READ;
    11'b01011110000 : RD_EN <= RD_EN_MC_READ;
    11'b01011110010 : RD_EN <= RD_EN_MC_READ;
    11'b01000110001 : RD_EN <= RD_EN_MC_READ;
    11'b01010110001 : RD_EN <= RD_EN_MC_READ;
    11'b00001101000 : RD_EN <= RD_EN_MC_READ;
    11'b00001101010 : RD_EN <= RD_EN_MC_READ;
    11'b00011101000 : RD_EN <= RD_EN_MC_READ;
    11'b00011101010 : RD_EN <= RD_EN_MC_READ;
    11'b00011001000 : RD_EN <= RD_EN_MC_READ;
    11'b00011001010 : RD_EN <= RD_EN_MC_READ;
    11'b00000001001 : RD_EN <= RD_EN_MC_READ;
    11'b00000001010 : RD_EN <= RD_EN_MC_READ;
    11'b00000001100 : RD_EN <= RD_EN_MC_READ;
    11'b00010001001 : RD_EN <= RD_EN_MC_READ;
    11'b00010001010 : RD_EN <= RD_EN_MC_READ;
    11'b00010001100 : RD_EN <= RD_EN_MC_READ;
    11'b00000101001 : RD_EN <= RD_EN_MC_READ;
    11'b00010101001 : RD_EN <= RD_EN_MC_READ;
    11'b01101000001 : RD_EN <= RD_EN_MC_READ;
    11'b00101000001 : RD_EN <= RD_EN_MC_READ;
    11'b00000011000 : RD_EN <= RD_EN_MC_READ;
    11'b00000011001 : RD_EN <= RD_EN_MC_READ;
    11'b00101110000 : RD_EN <= RD_EN_MC_READ;
    11'b00101110010 : RD_EN <= RD_EN_MC_READ;
    11'b00111110000 : RD_EN <= RD_EN_MC_READ;
    11'b00111110010 : RD_EN <= RD_EN_MC_READ;
    11'b00100110001 : RD_EN <= RD_EN_MC_READ;
    11'b00110110001 : RD_EN <= RD_EN_MC_READ;
    11'b01101110000 : RD_EN <= RD_EN_MC_READ;
    11'b01101110010 : RD_EN <= RD_EN_MC_READ;
    11'b01111110000 : RD_EN <= RD_EN_MC_READ;
    11'b01111110010 : RD_EN <= RD_EN_MC_READ;
    11'b01100110001 : RD_EN <= RD_EN_MC_READ;
    11'b01110110001 : RD_EN <= RD_EN_MC_READ;
    11'b01000000001 : RD_EN <= RD_EN_MC_READ;
    11'b01000000010 : RD_EN <= RD_EN_MC_READ;
    11'b01000000011 : RD_EN <= RD_EN_MC_READ;
    11'b01100000001 : RD_EN <= RD_EN_MC_READ;
    11'b01100000010 : RD_EN <= RD_EN_MC_READ;
    11'b11101101000 : RD_EN <= RD_EN_MC_READ;
    11'b11101101010 : RD_EN <= RD_EN_MC_READ;
    11'b11111101000 : RD_EN <= RD_EN_MC_READ;
    11'b11111101010 : RD_EN <= RD_EN_MC_READ;
    11'b11111001000 : RD_EN <= RD_EN_MC_READ;
    11'b11111001010 : RD_EN <= RD_EN_MC_READ;
    11'b11100001001 : RD_EN <= RD_EN_MC_READ;
    11'b11100001010 : RD_EN <= RD_EN_MC_READ;
    11'b11100001100 : RD_EN <= RD_EN_MC_READ;
    11'b11110001001 : RD_EN <= RD_EN_MC_READ;
    11'b11110001010 : RD_EN <= RD_EN_MC_READ;
    11'b11110001100 : RD_EN <= RD_EN_MC_READ;
    11'b11100101001 : RD_EN <= RD_EN_MC_READ;
    11'b11110101001 : RD_EN <= RD_EN_MC_READ;
    11'b10001101000 : RD_EN <= RD_EN_MC_READ;
    11'b10011001000 : RD_EN <= RD_EN_MC_READ;
    11'b10000001001 : RD_EN <= RD_EN_MC_READ;
    11'b10000001010 : RD_EN <= RD_EN_MC_READ;
    11'b10010001001 : RD_EN <= RD_EN_MC_READ;
    11'b10010001010 : RD_EN <= RD_EN_MC_READ;
    11'b10011101000 : RD_EN <= RD_EN_MC_READ;
    11'b01000011000 : RD_EN <= RD_EN_MC_READ;
    11'b01000011001 : RD_EN <= RD_EN_MC_READ;
    11'b00110011000 : RD_EN <= RD_EN_MC_READ;
    11'b00110011001 : RD_EN <= RD_EN_MC_READ;
    11'b10001110000 : RD_EN <= RD_EN_MC_READ;
    11'b10001100000 : RD_EN <= RD_EN_MC_READ;
    default         : RD_EN <= RD_EN_MC_NOP;
  endcase

endmodule

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
module DOUT_OP_rom (addr, DOUT_OP);

input   [10:0]  addr;
output  [ 2:0]  DOUT_OP;
reg     [ 2:0]  DOUT_OP;

parameter DOUT_OP_MC_NOP                  = 8'h00;
parameter DOUT_OP_MC_DINT3                = 8'h01;
parameter DOUT_OP_MC_PCH                  = 8'h02;
parameter DOUT_OP_MC_PCL                  = 8'h03;
parameter DOUT_OP_MC_P_REG                = 8'h04;
parameter DOUT_OP_MC_A_REG                = 8'h05;
parameter DOUT_OP_MC_X_REG                = 8'h06;
parameter DOUT_OP_MC_Y_REG                = 8'h07;

always @ (addr)
  case (addr)
    11'b00001110101 : DOUT_OP <= DOUT_OP_MC_DINT3;
    11'b00011110101 : DOUT_OP <= DOUT_OP_MC_DINT3;
    11'b00000110100 : DOUT_OP <= DOUT_OP_MC_DINT3;
    11'b00010110100 : DOUT_OP <= DOUT_OP_MC_DINT3;
    11'b00000000010 : DOUT_OP <= DOUT_OP_MC_PCH;
    11'b00000000011 : DOUT_OP <= DOUT_OP_MC_PCL;
    11'b00000000100 : DOUT_OP <= DOUT_OP_MC_P_REG;
    11'b11001110101 : DOUT_OP <= DOUT_OP_MC_DINT3;
    11'b11011110101 : DOUT_OP <= DOUT_OP_MC_DINT3;
    11'b11000110100 : DOUT_OP <= DOUT_OP_MC_DINT3;
    11'b11010110100 : DOUT_OP <= DOUT_OP_MC_DINT3;
    11'b11101110101 : DOUT_OP <= DOUT_OP_MC_DINT3;
    11'b11111110101 : DOUT_OP <= DOUT_OP_MC_DINT3;
    11'b11100110100 : DOUT_OP <= DOUT_OP_MC_DINT3;
    11'b11110110100 : DOUT_OP <= DOUT_OP_MC_DINT3;
    11'b00100000001 : DOUT_OP <= DOUT_OP_MC_PCH;
    11'b00100000010 : DOUT_OP <= DOUT_OP_MC_PCL;
    11'b01001110101 : DOUT_OP <= DOUT_OP_MC_DINT3;
    11'b01011110101 : DOUT_OP <= DOUT_OP_MC_DINT3;
    11'b01000110100 : DOUT_OP <= DOUT_OP_MC_DINT3;
    11'b01010110100 : DOUT_OP <= DOUT_OP_MC_DINT3;
    11'b01001000000 : DOUT_OP <= DOUT_OP_MC_A_REG;
    11'b00001000000 : DOUT_OP <= DOUT_OP_MC_P_REG;
    11'b00101110101 : DOUT_OP <= DOUT_OP_MC_DINT3;
    11'b00111110101 : DOUT_OP <= DOUT_OP_MC_DINT3;
    11'b00100110100 : DOUT_OP <= DOUT_OP_MC_DINT3;
    11'b00110110100 : DOUT_OP <= DOUT_OP_MC_DINT3;
    11'b01101110101 : DOUT_OP <= DOUT_OP_MC_DINT3;
    11'b01111110101 : DOUT_OP <= DOUT_OP_MC_DINT3;
    11'b01100110100 : DOUT_OP <= DOUT_OP_MC_DINT3;
    11'b01110110100 : DOUT_OP <= DOUT_OP_MC_DINT3;
    11'b10001101010 : DOUT_OP <= DOUT_OP_MC_A_REG;
    11'b10011001010 : DOUT_OP <= DOUT_OP_MC_A_REG;
    11'b10000001100 : DOUT_OP <= DOUT_OP_MC_A_REG;
    11'b10010001100 : DOUT_OP <= DOUT_OP_MC_A_REG;
    11'b10000101001 : DOUT_OP <= DOUT_OP_MC_A_REG;
    11'b10010101001 : DOUT_OP <= DOUT_OP_MC_A_REG;
    11'b10011101010 : DOUT_OP <= DOUT_OP_MC_A_REG;
    11'b01000011010 : DOUT_OP <= DOUT_OP_MC_PCH;
    11'b01000011011 : DOUT_OP <= DOUT_OP_MC_PCL;
    11'b01000011100 : DOUT_OP <= DOUT_OP_MC_P_REG;
    11'b00110011010 : DOUT_OP <= DOUT_OP_MC_PCH;
    11'b00110011011 : DOUT_OP <= DOUT_OP_MC_PCL;
    11'b00110011100 : DOUT_OP <= DOUT_OP_MC_P_REG;
    11'b10001110010 : DOUT_OP <= DOUT_OP_MC_X_REG;
    11'b10000110001 : DOUT_OP <= DOUT_OP_MC_X_REG;
    11'b10010110001 : DOUT_OP <= DOUT_OP_MC_X_REG;
    11'b10001100010 : DOUT_OP <= DOUT_OP_MC_Y_REG;
    11'b10000100001 : DOUT_OP <= DOUT_OP_MC_Y_REG;
    11'b10010100001 : DOUT_OP <= DOUT_OP_MC_Y_REG;
    default         : DOUT_OP <= DOUT_OP_MC_NOP;
  endcase

endmodule

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
module DINT1_OP_rom (addr, DINT1_OP);

input   [10:0]  addr;
output          DINT1_OP;
reg             DINT1_OP;

parameter DINT1_OP_MC_NOP                  = 8'h00;
parameter DINT1_OP_MC_DIN                  = 8'h01;

always @ (addr)
  case (addr)
    11'b01101101001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b01111101001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b01111001001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b01100001011 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b01110001011 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b00101101001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b00111101001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b00111001001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b00100001011 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b00110001011 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b00001110001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b00011110001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b00000110001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b00010110001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b00101100001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b00000000010 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b11001101001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b11011101001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b11011001001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b11000001011 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b11010001011 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b11101100001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b11001100001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b11001110001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b11011110001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b11000110001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b11010110001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b01001101001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b01011101001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b01011001001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b01000001011 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b01010001011 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b11101110001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b11111110001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b11100110001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b11110110001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b01001100001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b01101100001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b01101100100 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b00100000001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b10101101001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b10111101001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b10111001001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b10100001011 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b10110001011 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b10101110001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b10111110001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b10101100001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b10111100001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b01001110001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b01011110001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b01000110001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b01010110001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b00001101001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b00011101001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b00011001001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b00000001011 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b00010001011 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b00000011010 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b00101110001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b00111110001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b00100110001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b00110110001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b01101110001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b01111110001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b01100110001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b01110110001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b01000000100 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b01100000011 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b11101101001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b11111101001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b11111001001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b11100001011 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b11110001011 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b10001101001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b10011001001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b10000001011 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b10010001011 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b10011101001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b01000011010 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b00110011010 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b10001110001 : DINT1_OP <= DINT1_OP_MC_DIN;
    11'b10001100001 : DINT1_OP <= DINT1_OP_MC_DIN;
    default         : DINT1_OP <= DINT1_OP_MC_NOP;
  endcase

endmodule

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
module DINT2_OP_rom (addr, DINT2_OP);

input   [10:0]  addr;
output          DINT2_OP;
reg             DINT2_OP;

parameter DINT2_OP_MC_NOP                  = 8'h00;
parameter DINT2_OP_MC_DIN                  = 8'h01;

always @ (addr)
  case (addr)
    11'b00001110010 : DINT2_OP <= DINT2_OP_MC_DIN;
    11'b00011110010 : DINT2_OP <= DINT2_OP_MC_DIN;
    11'b11001110010 : DINT2_OP <= DINT2_OP_MC_DIN;
    11'b11011110010 : DINT2_OP <= DINT2_OP_MC_DIN;
    11'b11101110010 : DINT2_OP <= DINT2_OP_MC_DIN;
    11'b11111110010 : DINT2_OP <= DINT2_OP_MC_DIN;
    11'b01001110010 : DINT2_OP <= DINT2_OP_MC_DIN;
    11'b01011110010 : DINT2_OP <= DINT2_OP_MC_DIN;
    11'b00101110010 : DINT2_OP <= DINT2_OP_MC_DIN;
    11'b00111110010 : DINT2_OP <= DINT2_OP_MC_DIN;
    11'b01101110010 : DINT2_OP <= DINT2_OP_MC_DIN;
    11'b01111110010 : DINT2_OP <= DINT2_OP_MC_DIN;
    default         : DINT2_OP <= DINT2_OP_MC_NOP;
  endcase

endmodule

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
module DINT3_OP_rom (addr, DINT3_OP);

input   [10:0]  addr;
output          DINT3_OP;
reg             DINT3_OP;

parameter DINT3_OP_MC_NOP                  = 8'h00;
parameter DINT3_OP_MC_ALU                  = 8'h01;

always @ (addr)
  case (addr)
    11'b00001110100 : DINT3_OP <= DINT3_OP_MC_ALU;
    11'b00011110100 : DINT3_OP <= DINT3_OP_MC_ALU;
    11'b00000110011 : DINT3_OP <= DINT3_OP_MC_ALU;
    11'b00010110011 : DINT3_OP <= DINT3_OP_MC_ALU;
    11'b11001110100 : DINT3_OP <= DINT3_OP_MC_ALU;
    11'b11011110100 : DINT3_OP <= DINT3_OP_MC_ALU;
    11'b11000110011 : DINT3_OP <= DINT3_OP_MC_ALU;
    11'b11010110011 : DINT3_OP <= DINT3_OP_MC_ALU;
    11'b11101110100 : DINT3_OP <= DINT3_OP_MC_ALU;
    11'b11111110100 : DINT3_OP <= DINT3_OP_MC_ALU;
    11'b11100110011 : DINT3_OP <= DINT3_OP_MC_ALU;
    11'b11110110011 : DINT3_OP <= DINT3_OP_MC_ALU;
    11'b01001110100 : DINT3_OP <= DINT3_OP_MC_ALU;
    11'b01011110100 : DINT3_OP <= DINT3_OP_MC_ALU;
    11'b01000110011 : DINT3_OP <= DINT3_OP_MC_ALU;
    11'b01010110011 : DINT3_OP <= DINT3_OP_MC_ALU;
    11'b00101110100 : DINT3_OP <= DINT3_OP_MC_ALU;
    11'b00111110100 : DINT3_OP <= DINT3_OP_MC_ALU;
    11'b00100110011 : DINT3_OP <= DINT3_OP_MC_ALU;
    11'b00110110011 : DINT3_OP <= DINT3_OP_MC_ALU;
    11'b01101110100 : DINT3_OP <= DINT3_OP_MC_ALU;
    11'b01111110100 : DINT3_OP <= DINT3_OP_MC_ALU;
    11'b01100110011 : DINT3_OP <= DINT3_OP_MC_ALU;
    11'b01110110011 : DINT3_OP <= DINT3_OP_MC_ALU;
    default         : DINT3_OP <= DINT3_OP_MC_NOP;
  endcase

endmodule

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
module PC_OP_rom (addr, PC_OP);

input   [10:0]  addr;
output  [ 3:0]  PC_OP;
reg     [ 3:0]  PC_OP;

parameter PC_OP_MC_NOP                  = 8'h00;
parameter PC_OP_MC_INC                  = 8'h01;
parameter PC_OP_MC_BCC                  = 8'h02;
parameter PC_OP_MC_BCS                  = 8'h03;
parameter PC_OP_MC_BEQ                  = 8'h04;
parameter PC_OP_MC_BMI                  = 8'h05;
parameter PC_OP_MC_BNE                  = 8'h06;
parameter PC_OP_MC_BPL                  = 8'h07;
parameter PC_OP_MC_SPLIT                = 8'h08;
parameter PC_OP_MC_BVC                  = 8'h09;
parameter PC_OP_MC_BVS                  = 8'h0A;

always @ (addr)
  case (addr)
    11'b01101101000 : PC_OP <= PC_OP_MC_INC;
    11'b01101101001 : PC_OP <= PC_OP_MC_INC;
    11'b01111101000 : PC_OP <= PC_OP_MC_INC;
    11'b01111101001 : PC_OP <= PC_OP_MC_INC;
    11'b01111001000 : PC_OP <= PC_OP_MC_INC;
    11'b01111001001 : PC_OP <= PC_OP_MC_INC;
    11'b01101001000 : PC_OP <= PC_OP_MC_INC;
    11'b01100001000 : PC_OP <= PC_OP_MC_INC;
    11'b01110001000 : PC_OP <= PC_OP_MC_INC;
    11'b01100101000 : PC_OP <= PC_OP_MC_INC;
    11'b01110101000 : PC_OP <= PC_OP_MC_INC;
    11'b00101101000 : PC_OP <= PC_OP_MC_INC;
    11'b00101101001 : PC_OP <= PC_OP_MC_INC;
    11'b00111101000 : PC_OP <= PC_OP_MC_INC;
    11'b00111101001 : PC_OP <= PC_OP_MC_INC;
    11'b00111001000 : PC_OP <= PC_OP_MC_INC;
    11'b00111001001 : PC_OP <= PC_OP_MC_INC;
    11'b00101001000 : PC_OP <= PC_OP_MC_INC;
    11'b00100001000 : PC_OP <= PC_OP_MC_INC;
    11'b00110001000 : PC_OP <= PC_OP_MC_INC;
    11'b00100101000 : PC_OP <= PC_OP_MC_INC;
    11'b00110101000 : PC_OP <= PC_OP_MC_INC;
    11'b00001110000 : PC_OP <= PC_OP_MC_INC;
    11'b00001110001 : PC_OP <= PC_OP_MC_INC;
    11'b00011110000 : PC_OP <= PC_OP_MC_INC;
    11'b00011110001 : PC_OP <= PC_OP_MC_INC;
    11'b00000110000 : PC_OP <= PC_OP_MC_INC;
    11'b00010110000 : PC_OP <= PC_OP_MC_INC;
    11'b10010000000 : PC_OP <= PC_OP_MC_INC;
    11'b10010000001 : PC_OP <= PC_OP_MC_BCC;
    11'b10110000000 : PC_OP <= PC_OP_MC_INC;
    11'b10110000001 : PC_OP <= PC_OP_MC_BCS;
    11'b11110000000 : PC_OP <= PC_OP_MC_INC;
    11'b11110000001 : PC_OP <= PC_OP_MC_BEQ;
    11'b00101100000 : PC_OP <= PC_OP_MC_INC;
    11'b00101100001 : PC_OP <= PC_OP_MC_INC;
    11'b00100100000 : PC_OP <= PC_OP_MC_INC;
    11'b00110000000 : PC_OP <= PC_OP_MC_INC;
    11'b00110000001 : PC_OP <= PC_OP_MC_BMI;
    11'b11010000000 : PC_OP <= PC_OP_MC_INC;
    11'b11010000001 : PC_OP <= PC_OP_MC_BNE;
    11'b00010000000 : PC_OP <= PC_OP_MC_INC;
    11'b00010000001 : PC_OP <= PC_OP_MC_BPL;
    11'b00000000000 : PC_OP <= PC_OP_MC_INC;
    11'b00000000011 : PC_OP <= PC_OP_MC_SPLIT;
    11'b01010000000 : PC_OP <= PC_OP_MC_INC;
    11'b01010000001 : PC_OP <= PC_OP_MC_BVC;
    11'b01110000000 : PC_OP <= PC_OP_MC_INC;
    11'b01110000001 : PC_OP <= PC_OP_MC_BVS;
    11'b11001101000 : PC_OP <= PC_OP_MC_INC;
    11'b11001101001 : PC_OP <= PC_OP_MC_INC;
    11'b11011101000 : PC_OP <= PC_OP_MC_INC;
    11'b11011101001 : PC_OP <= PC_OP_MC_INC;
    11'b11011001000 : PC_OP <= PC_OP_MC_INC;
    11'b11011001001 : PC_OP <= PC_OP_MC_INC;
    11'b11001001000 : PC_OP <= PC_OP_MC_INC;
    11'b11000001000 : PC_OP <= PC_OP_MC_INC;
    11'b11010001000 : PC_OP <= PC_OP_MC_INC;
    11'b11000101000 : PC_OP <= PC_OP_MC_INC;
    11'b11010101000 : PC_OP <= PC_OP_MC_INC;
    11'b11101100000 : PC_OP <= PC_OP_MC_INC;
    11'b11101100001 : PC_OP <= PC_OP_MC_INC;
    11'b11100000000 : PC_OP <= PC_OP_MC_INC;
    11'b11100100000 : PC_OP <= PC_OP_MC_INC;
    11'b11001100000 : PC_OP <= PC_OP_MC_INC;
    11'b11001100001 : PC_OP <= PC_OP_MC_INC;
    11'b11000000000 : PC_OP <= PC_OP_MC_INC;
    11'b11000100000 : PC_OP <= PC_OP_MC_INC;
    11'b11001110000 : PC_OP <= PC_OP_MC_INC;
    11'b11001110001 : PC_OP <= PC_OP_MC_INC;
    11'b11011110000 : PC_OP <= PC_OP_MC_INC;
    11'b11011110001 : PC_OP <= PC_OP_MC_INC;
    11'b11000110000 : PC_OP <= PC_OP_MC_INC;
    11'b11010110000 : PC_OP <= PC_OP_MC_INC;
    11'b01001101000 : PC_OP <= PC_OP_MC_INC;
    11'b01001101001 : PC_OP <= PC_OP_MC_INC;
    11'b01011101000 : PC_OP <= PC_OP_MC_INC;
    11'b01011101001 : PC_OP <= PC_OP_MC_INC;
    11'b01011001000 : PC_OP <= PC_OP_MC_INC;
    11'b01011001001 : PC_OP <= PC_OP_MC_INC;
    11'b01001001000 : PC_OP <= PC_OP_MC_INC;
    11'b01000001000 : PC_OP <= PC_OP_MC_INC;
    11'b01010001000 : PC_OP <= PC_OP_MC_INC;
    11'b01000101000 : PC_OP <= PC_OP_MC_INC;
    11'b01010101000 : PC_OP <= PC_OP_MC_INC;
    11'b11101110000 : PC_OP <= PC_OP_MC_INC;
    11'b11101110001 : PC_OP <= PC_OP_MC_INC;
    11'b11111110000 : PC_OP <= PC_OP_MC_INC;
    11'b11111110001 : PC_OP <= PC_OP_MC_INC;
    11'b11100110000 : PC_OP <= PC_OP_MC_INC;
    11'b11110110000 : PC_OP <= PC_OP_MC_INC;
    11'b01001100000 : PC_OP <= PC_OP_MC_INC;
    11'b01001100001 : PC_OP <= PC_OP_MC_INC;
    11'b01001100010 : PC_OP <= PC_OP_MC_SPLIT;
    11'b01101100000 : PC_OP <= PC_OP_MC_INC;
    11'b01101100101 : PC_OP <= PC_OP_MC_SPLIT;
    11'b00100000000 : PC_OP <= PC_OP_MC_INC;
    11'b00100000010 : PC_OP <= PC_OP_MC_SPLIT;
    11'b10101101000 : PC_OP <= PC_OP_MC_INC;
    11'b10101101001 : PC_OP <= PC_OP_MC_INC;
    11'b10111101000 : PC_OP <= PC_OP_MC_INC;
    11'b10111101001 : PC_OP <= PC_OP_MC_INC;
    11'b10111001000 : PC_OP <= PC_OP_MC_INC;
    11'b10111001001 : PC_OP <= PC_OP_MC_INC;
    11'b10101001000 : PC_OP <= PC_OP_MC_INC;
    11'b10100101000 : PC_OP <= PC_OP_MC_INC;
    11'b10100001000 : PC_OP <= PC_OP_MC_INC;
    11'b10110001000 : PC_OP <= PC_OP_MC_INC;
    11'b10110101000 : PC_OP <= PC_OP_MC_INC;
    11'b10101110000 : PC_OP <= PC_OP_MC_INC;
    11'b10101110001 : PC_OP <= PC_OP_MC_INC;
    11'b10111110000 : PC_OP <= PC_OP_MC_INC;
    11'b10111110001 : PC_OP <= PC_OP_MC_INC;
    11'b10100010000 : PC_OP <= PC_OP_MC_INC;
    11'b10100110000 : PC_OP <= PC_OP_MC_INC;
    11'b10110110000 : PC_OP <= PC_OP_MC_INC;
    11'b10101100000 : PC_OP <= PC_OP_MC_INC;
    11'b10101100001 : PC_OP <= PC_OP_MC_INC;
    11'b10111100000 : PC_OP <= PC_OP_MC_INC;
    11'b10111100001 : PC_OP <= PC_OP_MC_INC;
    11'b10100000000 : PC_OP <= PC_OP_MC_INC;
    11'b10100100000 : PC_OP <= PC_OP_MC_INC;
    11'b10110100000 : PC_OP <= PC_OP_MC_INC;
    11'b01001110000 : PC_OP <= PC_OP_MC_INC;
    11'b01001110001 : PC_OP <= PC_OP_MC_INC;
    11'b01011110000 : PC_OP <= PC_OP_MC_INC;
    11'b01011110001 : PC_OP <= PC_OP_MC_INC;
    11'b01000110000 : PC_OP <= PC_OP_MC_INC;
    11'b01010110000 : PC_OP <= PC_OP_MC_INC;
    11'b00001101000 : PC_OP <= PC_OP_MC_INC;
    11'b00001101001 : PC_OP <= PC_OP_MC_INC;
    11'b00011101000 : PC_OP <= PC_OP_MC_INC;
    11'b00011101001 : PC_OP <= PC_OP_MC_INC;
    11'b00011001000 : PC_OP <= PC_OP_MC_INC;
    11'b00011001001 : PC_OP <= PC_OP_MC_INC;
    11'b00001001000 : PC_OP <= PC_OP_MC_INC;
    11'b00000001000 : PC_OP <= PC_OP_MC_INC;
    11'b00010001000 : PC_OP <= PC_OP_MC_INC;
    11'b00000101000 : PC_OP <= PC_OP_MC_INC;
    11'b00010101000 : PC_OP <= PC_OP_MC_INC;
    11'b00000011011 : PC_OP <= PC_OP_MC_SPLIT;
    11'b00101110000 : PC_OP <= PC_OP_MC_INC;
    11'b00101110001 : PC_OP <= PC_OP_MC_INC;
    11'b00111110000 : PC_OP <= PC_OP_MC_INC;
    11'b00111110001 : PC_OP <= PC_OP_MC_INC;
    11'b00100110000 : PC_OP <= PC_OP_MC_INC;
    11'b00110110000 : PC_OP <= PC_OP_MC_INC;
    11'b01101110000 : PC_OP <= PC_OP_MC_INC;
    11'b01101110001 : PC_OP <= PC_OP_MC_INC;
    11'b01111110000 : PC_OP <= PC_OP_MC_INC;
    11'b01111110001 : PC_OP <= PC_OP_MC_INC;
    11'b01100110000 : PC_OP <= PC_OP_MC_INC;
    11'b01110110000 : PC_OP <= PC_OP_MC_INC;
    11'b01000000101 : PC_OP <= PC_OP_MC_SPLIT;
    11'b01100000100 : PC_OP <= PC_OP_MC_SPLIT;
    11'b01100000101 : PC_OP <= PC_OP_MC_INC;
    11'b11101101000 : PC_OP <= PC_OP_MC_INC;
    11'b11101101001 : PC_OP <= PC_OP_MC_INC;
    11'b11111101000 : PC_OP <= PC_OP_MC_INC;
    11'b11111101001 : PC_OP <= PC_OP_MC_INC;
    11'b11111001000 : PC_OP <= PC_OP_MC_INC;
    11'b11111001001 : PC_OP <= PC_OP_MC_INC;
    11'b11101001000 : PC_OP <= PC_OP_MC_INC;
    11'b11100001000 : PC_OP <= PC_OP_MC_INC;
    11'b11110001000 : PC_OP <= PC_OP_MC_INC;
    11'b11100101000 : PC_OP <= PC_OP_MC_INC;
    11'b11110101000 : PC_OP <= PC_OP_MC_INC;
    11'b10001101000 : PC_OP <= PC_OP_MC_INC;
    11'b10001101001 : PC_OP <= PC_OP_MC_INC;
    11'b10011001000 : PC_OP <= PC_OP_MC_INC;
    11'b10011001001 : PC_OP <= PC_OP_MC_INC;
    11'b10000001000 : PC_OP <= PC_OP_MC_INC;
    11'b10010001000 : PC_OP <= PC_OP_MC_INC;
    11'b10000101000 : PC_OP <= PC_OP_MC_INC;
    11'b10010101000 : PC_OP <= PC_OP_MC_INC;
    11'b10011101000 : PC_OP <= PC_OP_MC_INC;
    11'b10011101001 : PC_OP <= PC_OP_MC_INC;
    11'b01000011011 : PC_OP <= PC_OP_MC_SPLIT;
    11'b00110011011 : PC_OP <= PC_OP_MC_SPLIT;
    11'b10001110000 : PC_OP <= PC_OP_MC_INC;
    11'b10001110001 : PC_OP <= PC_OP_MC_INC;
    11'b10000110000 : PC_OP <= PC_OP_MC_INC;
    11'b10010110000 : PC_OP <= PC_OP_MC_INC;
    11'b10001100000 : PC_OP <= PC_OP_MC_INC;
    11'b10001100001 : PC_OP <= PC_OP_MC_INC;
    11'b10000100000 : PC_OP <= PC_OP_MC_INC;
    11'b10010100000 : PC_OP <= PC_OP_MC_INC;
    default         : PC_OP <= PC_OP_MC_NOP;
  endcase

endmodule

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
module SP_OP_rom (addr, SP_OP);

input   [10:0]  addr;
output  [ 1:0]  SP_OP;
reg     [ 1:0]  SP_OP;

parameter SP_OP_MC_NOP                  = 8'h00;
parameter SP_OP_MC_PUSH                 = 8'h01;
parameter SP_OP_MC_POP                  = 8'h02;
parameter SP_OP_MC_X_REG                = 8'h03;

always @ (addr)
  case (addr)
    11'b00000000010 : SP_OP <= SP_OP_MC_PUSH;
    11'b00000000011 : SP_OP <= SP_OP_MC_PUSH;
    11'b00000000100 : SP_OP <= SP_OP_MC_PUSH;
    11'b00100000001 : SP_OP <= SP_OP_MC_PUSH;
    11'b00100000010 : SP_OP <= SP_OP_MC_PUSH;
    11'b01001000000 : SP_OP <= SP_OP_MC_PUSH;
    11'b00001000000 : SP_OP <= SP_OP_MC_PUSH;
    11'b01101000000 : SP_OP <= SP_OP_MC_POP;
    11'b00101000000 : SP_OP <= SP_OP_MC_POP;
    11'b01000000000 : SP_OP <= SP_OP_MC_POP;
    11'b01000000001 : SP_OP <= SP_OP_MC_POP;
    11'b01000000010 : SP_OP <= SP_OP_MC_POP;
    11'b01100000000 : SP_OP <= SP_OP_MC_POP;
    11'b01100000001 : SP_OP <= SP_OP_MC_POP;
    11'b01000011010 : SP_OP <= SP_OP_MC_PUSH;
    11'b01000011011 : SP_OP <= SP_OP_MC_PUSH;
    11'b01000011100 : SP_OP <= SP_OP_MC_PUSH;
    11'b00110011010 : SP_OP <= SP_OP_MC_PUSH;
    11'b00110011011 : SP_OP <= SP_OP_MC_PUSH;
    11'b00110011100 : SP_OP <= SP_OP_MC_PUSH;
    11'b10011010000 : SP_OP <= SP_OP_MC_X_REG;
    default         : SP_OP <= SP_OP_MC_NOP;
  endcase

endmodule

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
module ALU1_rom (addr, ALU1);

input   [10:0]  addr;
output  [ 1:0]  ALU1;
reg     [ 1:0]  ALU1;

parameter ALU1_MC_A_REG                = 8'h00;
parameter ALU1_MC_DIN                  = 8'h01;
parameter ALU1_MC_X_REG                = 8'h02;
parameter ALU1_MC_Y_REG                = 8'h03;

always @ (addr)
  case (addr)
    11'b01101101100 : ALU1 <= ALU1_MC_A_REG;
    11'b01111101100 : ALU1 <= ALU1_MC_A_REG;
    11'b01111001100 : ALU1 <= ALU1_MC_A_REG;
    11'b01101001001 : ALU1 <= ALU1_MC_A_REG;
    11'b01100001110 : ALU1 <= ALU1_MC_A_REG;
    11'b01110001110 : ALU1 <= ALU1_MC_A_REG;
    11'b01100101011 : ALU1 <= ALU1_MC_A_REG;
    11'b01110101011 : ALU1 <= ALU1_MC_A_REG;
    11'b00101101100 : ALU1 <= ALU1_MC_A_REG;
    11'b00111101100 : ALU1 <= ALU1_MC_A_REG;
    11'b00111001100 : ALU1 <= ALU1_MC_A_REG;
    11'b00101001001 : ALU1 <= ALU1_MC_A_REG;
    11'b00100001110 : ALU1 <= ALU1_MC_A_REG;
    11'b00110001110 : ALU1 <= ALU1_MC_A_REG;
    11'b00100101011 : ALU1 <= ALU1_MC_A_REG;
    11'b00110101011 : ALU1 <= ALU1_MC_A_REG;
    11'b00001110100 : ALU1 <= ALU1_MC_DIN;
    11'b00011110100 : ALU1 <= ALU1_MC_DIN;
    11'b00001010000 : ALU1 <= ALU1_MC_A_REG;
    11'b00000110011 : ALU1 <= ALU1_MC_DIN;
    11'b00010110011 : ALU1 <= ALU1_MC_DIN;
    11'b00101100100 : ALU1 <= ALU1_MC_A_REG;
    11'b00100100011 : ALU1 <= ALU1_MC_A_REG;
    11'b11001101100 : ALU1 <= ALU1_MC_A_REG;
    11'b11011101100 : ALU1 <= ALU1_MC_A_REG;
    11'b11011001100 : ALU1 <= ALU1_MC_A_REG;
    11'b11001001001 : ALU1 <= ALU1_MC_A_REG;
    11'b11000001110 : ALU1 <= ALU1_MC_A_REG;
    11'b11010001110 : ALU1 <= ALU1_MC_A_REG;
    11'b11000101011 : ALU1 <= ALU1_MC_A_REG;
    11'b11010101011 : ALU1 <= ALU1_MC_A_REG;
    11'b11101100100 : ALU1 <= ALU1_MC_X_REG;
    11'b11100000001 : ALU1 <= ALU1_MC_X_REG;
    11'b11100100011 : ALU1 <= ALU1_MC_X_REG;
    11'b11001100100 : ALU1 <= ALU1_MC_Y_REG;
    11'b11000000001 : ALU1 <= ALU1_MC_Y_REG;
    11'b11000100011 : ALU1 <= ALU1_MC_Y_REG;
    11'b11001110100 : ALU1 <= ALU1_MC_DIN;
    11'b11011110100 : ALU1 <= ALU1_MC_DIN;
    11'b11000110011 : ALU1 <= ALU1_MC_DIN;
    11'b11010110011 : ALU1 <= ALU1_MC_DIN;
    11'b11001010000 : ALU1 <= ALU1_MC_X_REG;
    11'b10001000000 : ALU1 <= ALU1_MC_Y_REG;
    11'b01001101100 : ALU1 <= ALU1_MC_A_REG;
    11'b01011101100 : ALU1 <= ALU1_MC_A_REG;
    11'b01011001100 : ALU1 <= ALU1_MC_A_REG;
    11'b01001001001 : ALU1 <= ALU1_MC_A_REG;
    11'b01000001110 : ALU1 <= ALU1_MC_A_REG;
    11'b01010001110 : ALU1 <= ALU1_MC_A_REG;
    11'b01000101011 : ALU1 <= ALU1_MC_A_REG;
    11'b01010101011 : ALU1 <= ALU1_MC_A_REG;
    11'b11101110100 : ALU1 <= ALU1_MC_DIN;
    11'b11111110100 : ALU1 <= ALU1_MC_DIN;
    11'b11100110011 : ALU1 <= ALU1_MC_DIN;
    11'b11110110011 : ALU1 <= ALU1_MC_DIN;
    11'b11101000000 : ALU1 <= ALU1_MC_X_REG;
    11'b11001000000 : ALU1 <= ALU1_MC_Y_REG;
    11'b01001110100 : ALU1 <= ALU1_MC_DIN;
    11'b01011110100 : ALU1 <= ALU1_MC_DIN;
    11'b01001010000 : ALU1 <= ALU1_MC_A_REG;
    11'b01000110011 : ALU1 <= ALU1_MC_DIN;
    11'b01010110011 : ALU1 <= ALU1_MC_DIN;
    11'b00001101100 : ALU1 <= ALU1_MC_A_REG;
    11'b00011101100 : ALU1 <= ALU1_MC_A_REG;
    11'b00011001100 : ALU1 <= ALU1_MC_A_REG;
    11'b00001001001 : ALU1 <= ALU1_MC_A_REG;
    11'b00000001110 : ALU1 <= ALU1_MC_A_REG;
    11'b00010001110 : ALU1 <= ALU1_MC_A_REG;
    11'b00000101011 : ALU1 <= ALU1_MC_A_REG;
    11'b00010101011 : ALU1 <= ALU1_MC_A_REG;
    11'b00101110100 : ALU1 <= ALU1_MC_DIN;
    11'b00111110100 : ALU1 <= ALU1_MC_DIN;
    11'b00101010000 : ALU1 <= ALU1_MC_A_REG;
    11'b00100110011 : ALU1 <= ALU1_MC_DIN;
    11'b00110110011 : ALU1 <= ALU1_MC_DIN;
    11'b01101110100 : ALU1 <= ALU1_MC_DIN;
    11'b01111110100 : ALU1 <= ALU1_MC_DIN;
    11'b01101010000 : ALU1 <= ALU1_MC_A_REG;
    11'b01100110011 : ALU1 <= ALU1_MC_DIN;
    11'b01110110011 : ALU1 <= ALU1_MC_DIN;
    11'b11101101100 : ALU1 <= ALU1_MC_A_REG;
    11'b11111101100 : ALU1 <= ALU1_MC_A_REG;
    11'b11111001100 : ALU1 <= ALU1_MC_A_REG;
    11'b11101001001 : ALU1 <= ALU1_MC_A_REG;
    11'b11100001110 : ALU1 <= ALU1_MC_A_REG;
    11'b11110001110 : ALU1 <= ALU1_MC_A_REG;
    11'b11100101011 : ALU1 <= ALU1_MC_A_REG;
    11'b11110101011 : ALU1 <= ALU1_MC_A_REG;
    11'b10101010000 : ALU1 <= ALU1_MC_A_REG;
    11'b10101000000 : ALU1 <= ALU1_MC_A_REG;
    11'b10001010000 : ALU1 <= ALU1_MC_X_REG;
    11'b10011000000 : ALU1 <= ALU1_MC_Y_REG;
    default         : ALU1 <= ALU1_MC_A_REG;
  endcase

endmodule

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
module ALU2_rom (addr, ALU2);

input   [10:0]  addr;
output  [ 1:0]  ALU2;
reg     [ 1:0]  ALU2;

parameter ALU2_MC_DIN                  = 8'h00;
parameter ALU2_MC_ONE                  = 8'h01;
parameter ALU2_MC_SP_REG               = 8'h02;

always @ (addr)
  case (addr)
    11'b01101101100 : ALU2 <= ALU2_MC_DIN;
    11'b01111101100 : ALU2 <= ALU2_MC_DIN;
    11'b01111001100 : ALU2 <= ALU2_MC_DIN;
    11'b01101001001 : ALU2 <= ALU2_MC_DIN;
    11'b01100001110 : ALU2 <= ALU2_MC_DIN;
    11'b01110001110 : ALU2 <= ALU2_MC_DIN;
    11'b01100101011 : ALU2 <= ALU2_MC_DIN;
    11'b01110101011 : ALU2 <= ALU2_MC_DIN;
    11'b00101101100 : ALU2 <= ALU2_MC_DIN;
    11'b00111101100 : ALU2 <= ALU2_MC_DIN;
    11'b00111001100 : ALU2 <= ALU2_MC_DIN;
    11'b00101001001 : ALU2 <= ALU2_MC_DIN;
    11'b00100001110 : ALU2 <= ALU2_MC_DIN;
    11'b00110001110 : ALU2 <= ALU2_MC_DIN;
    11'b00100101011 : ALU2 <= ALU2_MC_DIN;
    11'b00110101011 : ALU2 <= ALU2_MC_DIN;
    11'b00101100100 : ALU2 <= ALU2_MC_DIN;
    11'b00100100011 : ALU2 <= ALU2_MC_DIN;
    11'b11001101100 : ALU2 <= ALU2_MC_DIN;
    11'b11011101100 : ALU2 <= ALU2_MC_DIN;
    11'b11011001100 : ALU2 <= ALU2_MC_DIN;
    11'b11001001001 : ALU2 <= ALU2_MC_DIN;
    11'b11000001110 : ALU2 <= ALU2_MC_DIN;
    11'b11010001110 : ALU2 <= ALU2_MC_DIN;
    11'b11000101011 : ALU2 <= ALU2_MC_DIN;
    11'b11010101011 : ALU2 <= ALU2_MC_DIN;
    11'b11101100100 : ALU2 <= ALU2_MC_DIN;
    11'b11100000001 : ALU2 <= ALU2_MC_DIN;
    11'b11100100011 : ALU2 <= ALU2_MC_DIN;
    11'b11001100100 : ALU2 <= ALU2_MC_DIN;
    11'b11000000001 : ALU2 <= ALU2_MC_DIN;
    11'b11000100011 : ALU2 <= ALU2_MC_DIN;
    11'b11001110100 : ALU2 <= ALU2_MC_ONE;
    11'b11011110100 : ALU2 <= ALU2_MC_ONE;
    11'b11000110011 : ALU2 <= ALU2_MC_ONE;
    11'b11010110011 : ALU2 <= ALU2_MC_ONE;
    11'b11001010000 : ALU2 <= ALU2_MC_ONE;
    11'b10001000000 : ALU2 <= ALU2_MC_ONE;
    11'b01001101100 : ALU2 <= ALU2_MC_DIN;
    11'b01011101100 : ALU2 <= ALU2_MC_DIN;
    11'b01011001100 : ALU2 <= ALU2_MC_DIN;
    11'b01001001001 : ALU2 <= ALU2_MC_DIN;
    11'b01000001110 : ALU2 <= ALU2_MC_DIN;
    11'b01010001110 : ALU2 <= ALU2_MC_DIN;
    11'b01000101011 : ALU2 <= ALU2_MC_DIN;
    11'b01010101011 : ALU2 <= ALU2_MC_DIN;
    11'b11101110100 : ALU2 <= ALU2_MC_ONE;
    11'b11111110100 : ALU2 <= ALU2_MC_ONE;
    11'b11100110011 : ALU2 <= ALU2_MC_ONE;
    11'b11110110011 : ALU2 <= ALU2_MC_ONE;
    11'b11101000000 : ALU2 <= ALU2_MC_ONE;
    11'b11001000000 : ALU2 <= ALU2_MC_ONE;
    11'b10101101100 : ALU2 <= ALU2_MC_DIN;
    11'b10111101100 : ALU2 <= ALU2_MC_DIN;
    11'b10111001100 : ALU2 <= ALU2_MC_DIN;
    11'b10101001001 : ALU2 <= ALU2_MC_DIN;
    11'b10100101011 : ALU2 <= ALU2_MC_DIN;
    11'b10100001110 : ALU2 <= ALU2_MC_DIN;
    11'b10110001110 : ALU2 <= ALU2_MC_DIN;
    11'b10110101011 : ALU2 <= ALU2_MC_DIN;
    11'b10101110100 : ALU2 <= ALU2_MC_DIN;
    11'b10111110100 : ALU2 <= ALU2_MC_DIN;
    11'b10100010001 : ALU2 <= ALU2_MC_DIN;
    11'b10100110011 : ALU2 <= ALU2_MC_DIN;
    11'b10110110011 : ALU2 <= ALU2_MC_DIN;
    11'b10101100100 : ALU2 <= ALU2_MC_DIN;
    11'b10111100100 : ALU2 <= ALU2_MC_DIN;
    11'b10100000001 : ALU2 <= ALU2_MC_DIN;
    11'b10100100011 : ALU2 <= ALU2_MC_DIN;
    11'b10110100011 : ALU2 <= ALU2_MC_DIN;
    11'b00001101100 : ALU2 <= ALU2_MC_DIN;
    11'b00011101100 : ALU2 <= ALU2_MC_DIN;
    11'b00011001100 : ALU2 <= ALU2_MC_DIN;
    11'b00001001001 : ALU2 <= ALU2_MC_DIN;
    11'b00000001110 : ALU2 <= ALU2_MC_DIN;
    11'b00010001110 : ALU2 <= ALU2_MC_DIN;
    11'b00000101011 : ALU2 <= ALU2_MC_DIN;
    11'b00010101011 : ALU2 <= ALU2_MC_DIN;
    11'b01101000011 : ALU2 <= ALU2_MC_DIN;
    11'b11101101100 : ALU2 <= ALU2_MC_DIN;
    11'b11111101100 : ALU2 <= ALU2_MC_DIN;
    11'b11111001100 : ALU2 <= ALU2_MC_DIN;
    11'b11101001001 : ALU2 <= ALU2_MC_DIN;
    11'b11100001110 : ALU2 <= ALU2_MC_DIN;
    11'b11110001110 : ALU2 <= ALU2_MC_DIN;
    11'b11100101011 : ALU2 <= ALU2_MC_DIN;
    11'b11110101011 : ALU2 <= ALU2_MC_DIN;
    11'b10111010000 : ALU2 <= ALU2_MC_SP_REG;
    default         : ALU2 <= ALU2_MC_DIN;
  endcase

endmodule

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
module ALU_OP_rom (addr, ALU_OP);

input   [10:0]  addr;
output  [ 3:0]  ALU_OP;
reg     [ 3:0]  ALU_OP;

parameter ALU_OP_MC_PASS1                = 8'h00;
parameter ALU_OP_MC_ADDC                 = 8'h01;
parameter ALU_OP_MC_BIT_AND              = 8'h02;
parameter ALU_OP_MC_BIT_ASL              = 8'h03;
parameter ALU_OP_MC_SUB                  = 8'h04;
parameter ALU_OP_MC_BIT_XOR              = 8'h05;
parameter ALU_OP_MC_ADD                  = 8'h06;
parameter ALU_OP_MC_PASS2                = 8'h07;
parameter ALU_OP_MC_BIT_LSR              = 8'h08;
parameter ALU_OP_MC_BIT_OR               = 8'h09;
parameter ALU_OP_MC_BIT_ROL              = 8'h0A;
parameter ALU_OP_MC_BIT_ROR              = 8'h0B;
parameter ALU_OP_MC_SUBB                 = 8'h0C;

always @ (addr)
  case (addr)
    11'b01101101100 : ALU_OP <= ALU_OP_MC_ADDC;
    11'b01111101100 : ALU_OP <= ALU_OP_MC_ADDC;
    11'b01111001100 : ALU_OP <= ALU_OP_MC_ADDC;
    11'b01101001001 : ALU_OP <= ALU_OP_MC_ADDC;
    11'b01100001110 : ALU_OP <= ALU_OP_MC_ADDC;
    11'b01110001110 : ALU_OP <= ALU_OP_MC_ADDC;
    11'b01100101011 : ALU_OP <= ALU_OP_MC_ADDC;
    11'b01110101011 : ALU_OP <= ALU_OP_MC_ADDC;
    11'b00101101100 : ALU_OP <= ALU_OP_MC_BIT_AND;
    11'b00111101100 : ALU_OP <= ALU_OP_MC_BIT_AND;
    11'b00111001100 : ALU_OP <= ALU_OP_MC_BIT_AND;
    11'b00101001001 : ALU_OP <= ALU_OP_MC_BIT_AND;
    11'b00100001110 : ALU_OP <= ALU_OP_MC_BIT_AND;
    11'b00110001110 : ALU_OP <= ALU_OP_MC_BIT_AND;
    11'b00100101011 : ALU_OP <= ALU_OP_MC_BIT_AND;
    11'b00110101011 : ALU_OP <= ALU_OP_MC_BIT_AND;
    11'b00001110100 : ALU_OP <= ALU_OP_MC_BIT_ASL;
    11'b00011110100 : ALU_OP <= ALU_OP_MC_BIT_ASL;
    11'b00001010000 : ALU_OP <= ALU_OP_MC_BIT_ASL;
    11'b00000110011 : ALU_OP <= ALU_OP_MC_BIT_ASL;
    11'b00010110011 : ALU_OP <= ALU_OP_MC_BIT_ASL;
    11'b00101100100 : ALU_OP <= ALU_OP_MC_BIT_AND;
    11'b00100100011 : ALU_OP <= ALU_OP_MC_BIT_AND;
    11'b11001101100 : ALU_OP <= ALU_OP_MC_SUB;
    11'b11011101100 : ALU_OP <= ALU_OP_MC_SUB;
    11'b11011001100 : ALU_OP <= ALU_OP_MC_SUB;
    11'b11001001001 : ALU_OP <= ALU_OP_MC_SUB;
    11'b11000001110 : ALU_OP <= ALU_OP_MC_SUB;
    11'b11010001110 : ALU_OP <= ALU_OP_MC_SUB;
    11'b11000101011 : ALU_OP <= ALU_OP_MC_SUB;
    11'b11010101011 : ALU_OP <= ALU_OP_MC_SUB;
    11'b11101100100 : ALU_OP <= ALU_OP_MC_SUB;
    11'b11100000001 : ALU_OP <= ALU_OP_MC_SUB;
    11'b11100100011 : ALU_OP <= ALU_OP_MC_SUB;
    11'b11001100100 : ALU_OP <= ALU_OP_MC_SUB;
    11'b11000000001 : ALU_OP <= ALU_OP_MC_SUB;
    11'b11000100011 : ALU_OP <= ALU_OP_MC_SUB;
    11'b11001110100 : ALU_OP <= ALU_OP_MC_SUB;
    11'b11011110100 : ALU_OP <= ALU_OP_MC_SUB;
    11'b11000110011 : ALU_OP <= ALU_OP_MC_SUB;
    11'b11010110011 : ALU_OP <= ALU_OP_MC_SUB;
    11'b11001010000 : ALU_OP <= ALU_OP_MC_SUB;
    11'b10001000000 : ALU_OP <= ALU_OP_MC_SUB;
    11'b01001101100 : ALU_OP <= ALU_OP_MC_BIT_XOR;
    11'b01011101100 : ALU_OP <= ALU_OP_MC_BIT_XOR;
    11'b01011001100 : ALU_OP <= ALU_OP_MC_BIT_XOR;
    11'b01001001001 : ALU_OP <= ALU_OP_MC_BIT_XOR;
    11'b01000001110 : ALU_OP <= ALU_OP_MC_BIT_XOR;
    11'b01010001110 : ALU_OP <= ALU_OP_MC_BIT_XOR;
    11'b01000101011 : ALU_OP <= ALU_OP_MC_BIT_XOR;
    11'b01010101011 : ALU_OP <= ALU_OP_MC_BIT_XOR;
    11'b11101110100 : ALU_OP <= ALU_OP_MC_ADD;
    11'b11111110100 : ALU_OP <= ALU_OP_MC_ADD;
    11'b11100110011 : ALU_OP <= ALU_OP_MC_ADD;
    11'b11110110011 : ALU_OP <= ALU_OP_MC_ADD;
    11'b11101000000 : ALU_OP <= ALU_OP_MC_ADD;
    11'b11001000000 : ALU_OP <= ALU_OP_MC_ADD;
    11'b10101101100 : ALU_OP <= ALU_OP_MC_PASS2;
    11'b10111101100 : ALU_OP <= ALU_OP_MC_PASS2;
    11'b10111001100 : ALU_OP <= ALU_OP_MC_PASS2;
    11'b10101001001 : ALU_OP <= ALU_OP_MC_PASS2;
    11'b10100101011 : ALU_OP <= ALU_OP_MC_PASS2;
    11'b10100001110 : ALU_OP <= ALU_OP_MC_PASS2;
    11'b10110001110 : ALU_OP <= ALU_OP_MC_PASS2;
    11'b10110101011 : ALU_OP <= ALU_OP_MC_PASS2;
    11'b10101110100 : ALU_OP <= ALU_OP_MC_PASS2;
    11'b10111110100 : ALU_OP <= ALU_OP_MC_PASS2;
    11'b10100010001 : ALU_OP <= ALU_OP_MC_PASS2;
    11'b10100110011 : ALU_OP <= ALU_OP_MC_PASS2;
    11'b10110110011 : ALU_OP <= ALU_OP_MC_PASS2;
    11'b10101100100 : ALU_OP <= ALU_OP_MC_PASS2;
    11'b10111100100 : ALU_OP <= ALU_OP_MC_PASS2;
    11'b10100000001 : ALU_OP <= ALU_OP_MC_PASS2;
    11'b10100100011 : ALU_OP <= ALU_OP_MC_PASS2;
    11'b10110100011 : ALU_OP <= ALU_OP_MC_PASS2;
    11'b01001110100 : ALU_OP <= ALU_OP_MC_BIT_LSR;
    11'b01011110100 : ALU_OP <= ALU_OP_MC_BIT_LSR;
    11'b01001010000 : ALU_OP <= ALU_OP_MC_BIT_LSR;
    11'b01000110011 : ALU_OP <= ALU_OP_MC_BIT_LSR;
    11'b01010110011 : ALU_OP <= ALU_OP_MC_BIT_LSR;
    11'b00001101100 : ALU_OP <= ALU_OP_MC_BIT_OR;
    11'b00011101100 : ALU_OP <= ALU_OP_MC_BIT_OR;
    11'b00011001100 : ALU_OP <= ALU_OP_MC_BIT_OR;
    11'b00001001001 : ALU_OP <= ALU_OP_MC_BIT_OR;
    11'b00000001110 : ALU_OP <= ALU_OP_MC_BIT_OR;
    11'b00010001110 : ALU_OP <= ALU_OP_MC_BIT_OR;
    11'b00000101011 : ALU_OP <= ALU_OP_MC_BIT_OR;
    11'b00010101011 : ALU_OP <= ALU_OP_MC_BIT_OR;
    11'b01101000011 : ALU_OP <= ALU_OP_MC_PASS2;
    11'b00101110100 : ALU_OP <= ALU_OP_MC_BIT_ROL;
    11'b00111110100 : ALU_OP <= ALU_OP_MC_BIT_ROL;
    11'b00101010000 : ALU_OP <= ALU_OP_MC_BIT_ROL;
    11'b00100110011 : ALU_OP <= ALU_OP_MC_BIT_ROL;
    11'b00110110011 : ALU_OP <= ALU_OP_MC_BIT_ROL;
    11'b01101110100 : ALU_OP <= ALU_OP_MC_BIT_ROR;
    11'b01111110100 : ALU_OP <= ALU_OP_MC_BIT_ROR;
    11'b01101010000 : ALU_OP <= ALU_OP_MC_BIT_ROR;
    11'b01100110011 : ALU_OP <= ALU_OP_MC_BIT_ROR;
    11'b01110110011 : ALU_OP <= ALU_OP_MC_BIT_ROR;
    11'b11101101100 : ALU_OP <= ALU_OP_MC_SUBB;
    11'b11111101100 : ALU_OP <= ALU_OP_MC_SUBB;
    11'b11111001100 : ALU_OP <= ALU_OP_MC_SUBB;
    11'b11101001001 : ALU_OP <= ALU_OP_MC_SUBB;
    11'b11100001110 : ALU_OP <= ALU_OP_MC_SUBB;
    11'b11110001110 : ALU_OP <= ALU_OP_MC_SUBB;
    11'b11100101011 : ALU_OP <= ALU_OP_MC_SUBB;
    11'b11110101011 : ALU_OP <= ALU_OP_MC_SUBB;
    11'b10101010000 : ALU_OP <= ALU_OP_MC_PASS1;
    11'b10101000000 : ALU_OP <= ALU_OP_MC_PASS1;
    11'b10111010000 : ALU_OP <= ALU_OP_MC_PASS2;
    11'b10001010000 : ALU_OP <= ALU_OP_MC_PASS1;
    11'b10011000000 : ALU_OP <= ALU_OP_MC_PASS1;
    default         : ALU_OP <= ALU_OP_MC_PASS1;
  endcase

endmodule

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
module A_LE_rom (addr, A_LE);

input   [10:0]  addr;
output          A_LE;
reg             A_LE;

parameter A_LE_MC_NOP                  = 8'h00;
parameter A_LE_MC_LE                   = 8'h01;

always @ (addr)
  case (addr)
    11'b01101101100 : A_LE <= A_LE_MC_LE;
    11'b01111101100 : A_LE <= A_LE_MC_LE;
    11'b01111001100 : A_LE <= A_LE_MC_LE;
    11'b01101001001 : A_LE <= A_LE_MC_LE;
    11'b01100001110 : A_LE <= A_LE_MC_LE;
    11'b01110001110 : A_LE <= A_LE_MC_LE;
    11'b01100101011 : A_LE <= A_LE_MC_LE;
    11'b01110101011 : A_LE <= A_LE_MC_LE;
    11'b00101101100 : A_LE <= A_LE_MC_LE;
    11'b00111101100 : A_LE <= A_LE_MC_LE;
    11'b00111001100 : A_LE <= A_LE_MC_LE;
    11'b00101001001 : A_LE <= A_LE_MC_LE;
    11'b00100001110 : A_LE <= A_LE_MC_LE;
    11'b00110001110 : A_LE <= A_LE_MC_LE;
    11'b00100101011 : A_LE <= A_LE_MC_LE;
    11'b00110101011 : A_LE <= A_LE_MC_LE;
    11'b00001010000 : A_LE <= A_LE_MC_LE;
    11'b01001101100 : A_LE <= A_LE_MC_LE;
    11'b01011101100 : A_LE <= A_LE_MC_LE;
    11'b01011001100 : A_LE <= A_LE_MC_LE;
    11'b01001001001 : A_LE <= A_LE_MC_LE;
    11'b01000001110 : A_LE <= A_LE_MC_LE;
    11'b01010001110 : A_LE <= A_LE_MC_LE;
    11'b01000101011 : A_LE <= A_LE_MC_LE;
    11'b01010101011 : A_LE <= A_LE_MC_LE;
    11'b10101101100 : A_LE <= A_LE_MC_LE;
    11'b10111101100 : A_LE <= A_LE_MC_LE;
    11'b10111001100 : A_LE <= A_LE_MC_LE;
    11'b10101001001 : A_LE <= A_LE_MC_LE;
    11'b10100101011 : A_LE <= A_LE_MC_LE;
    11'b10100001110 : A_LE <= A_LE_MC_LE;
    11'b10110001110 : A_LE <= A_LE_MC_LE;
    11'b10110101011 : A_LE <= A_LE_MC_LE;
    11'b01001010000 : A_LE <= A_LE_MC_LE;
    11'b00001101100 : A_LE <= A_LE_MC_LE;
    11'b00011101100 : A_LE <= A_LE_MC_LE;
    11'b00011001100 : A_LE <= A_LE_MC_LE;
    11'b00001001001 : A_LE <= A_LE_MC_LE;
    11'b00000001110 : A_LE <= A_LE_MC_LE;
    11'b00010001110 : A_LE <= A_LE_MC_LE;
    11'b00000101011 : A_LE <= A_LE_MC_LE;
    11'b00010101011 : A_LE <= A_LE_MC_LE;
    11'b01101000011 : A_LE <= A_LE_MC_LE;
    11'b00101010000 : A_LE <= A_LE_MC_LE;
    11'b01101010000 : A_LE <= A_LE_MC_LE;
    11'b11101101100 : A_LE <= A_LE_MC_LE;
    11'b11111101100 : A_LE <= A_LE_MC_LE;
    11'b11111001100 : A_LE <= A_LE_MC_LE;
    11'b11101001001 : A_LE <= A_LE_MC_LE;
    11'b11100001110 : A_LE <= A_LE_MC_LE;
    11'b11110001110 : A_LE <= A_LE_MC_LE;
    11'b11100101011 : A_LE <= A_LE_MC_LE;
    11'b11110101011 : A_LE <= A_LE_MC_LE;
    11'b10001010000 : A_LE <= A_LE_MC_LE;
    11'b10011000000 : A_LE <= A_LE_MC_LE;
    default         : A_LE <= A_LE_MC_NOP;
  endcase

endmodule

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
module X_LE_rom (addr, X_LE);

input   [10:0]  addr;
output          X_LE;
reg             X_LE;

parameter X_LE_MC_NOP                  = 8'h00;
parameter X_LE_MC_LE                   = 8'h01;

always @ (addr)
  case (addr)
    11'b11001010000 : X_LE <= X_LE_MC_LE;
    11'b11101000000 : X_LE <= X_LE_MC_LE;
    11'b10101110100 : X_LE <= X_LE_MC_LE;
    11'b10111110100 : X_LE <= X_LE_MC_LE;
    11'b10100010001 : X_LE <= X_LE_MC_LE;
    11'b10100110011 : X_LE <= X_LE_MC_LE;
    11'b10110110011 : X_LE <= X_LE_MC_LE;
    11'b10101010000 : X_LE <= X_LE_MC_LE;
    11'b10111010000 : X_LE <= X_LE_MC_LE;
    default         : X_LE <= X_LE_MC_NOP;
  endcase

endmodule

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
module Y_LE_rom (addr, Y_LE);

input   [10:0]  addr;
output          Y_LE;
reg             Y_LE;

parameter Y_LE_MC_NOP                  = 8'h00;
parameter Y_LE_MC_LE                   = 8'h01;

always @ (addr)
  case (addr)
    11'b10001000000 : Y_LE <= Y_LE_MC_LE;
    11'b11001000000 : Y_LE <= Y_LE_MC_LE;
    11'b10101100100 : Y_LE <= Y_LE_MC_LE;
    11'b10111100100 : Y_LE <= Y_LE_MC_LE;
    11'b10100000001 : Y_LE <= Y_LE_MC_LE;
    11'b10100100011 : Y_LE <= Y_LE_MC_LE;
    11'b10110100011 : Y_LE <= Y_LE_MC_LE;
    11'b10101000000 : Y_LE <= Y_LE_MC_LE;
    default         : Y_LE <= Y_LE_MC_NOP;
  endcase

endmodule

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
module FLAG_OP_rom (addr, FLAG_OP);

input   [10:0]  addr;
output  [ 3:0]  FLAG_OP;
reg     [ 3:0]  FLAG_OP;

parameter FLAG_OP_MC_NOP                  = 8'h00;
parameter FLAG_OP_MC_NVZC                 = 8'h01;
parameter FLAG_OP_MC_NZ                   = 8'h02;
parameter FLAG_OP_MC_NZC                  = 8'h03;
parameter FLAG_OP_MC_BIT                  = 8'h04;
parameter FLAG_OP_MC_SETB                 = 8'h05;
parameter FLAG_OP_MC_SETI                 = 8'h06;
parameter FLAG_OP_MC_CLEARC               = 8'h07;
parameter FLAG_OP_MC_CLEARD               = 8'h08;
parameter FLAG_OP_MC_CLEARI               = 8'h09;
parameter FLAG_OP_MC_CLEARV               = 8'h0A;
parameter FLAG_OP_MC_DIN                  = 8'h0B;
parameter FLAG_OP_MC_SETC                 = 8'h0C;
parameter FLAG_OP_MC_SETD                 = 8'h0D;

always @ (addr)
  case (addr)
    11'b01101101100 : FLAG_OP <= FLAG_OP_MC_NVZC;
    11'b01111101100 : FLAG_OP <= FLAG_OP_MC_NVZC;
    11'b01111001100 : FLAG_OP <= FLAG_OP_MC_NVZC;
    11'b01101001001 : FLAG_OP <= FLAG_OP_MC_NVZC;
    11'b01100001110 : FLAG_OP <= FLAG_OP_MC_NVZC;
    11'b01110001110 : FLAG_OP <= FLAG_OP_MC_NVZC;
    11'b01100101011 : FLAG_OP <= FLAG_OP_MC_NVZC;
    11'b01110101011 : FLAG_OP <= FLAG_OP_MC_NVZC;
    11'b00101101100 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b00111101100 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b00111001100 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b00101001001 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b00100001110 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b00110001110 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b00100101011 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b00110101011 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b00001110100 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b00011110100 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b00001010000 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b00000110011 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b00010110011 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b00101100100 : FLAG_OP <= FLAG_OP_MC_BIT;
    11'b00100100011 : FLAG_OP <= FLAG_OP_MC_BIT;
    11'b00000000001 : FLAG_OP <= FLAG_OP_MC_SETB;
    11'b00000000101 : FLAG_OP <= FLAG_OP_MC_SETI;
    11'b00011000000 : FLAG_OP <= FLAG_OP_MC_CLEARC;
    11'b11011000000 : FLAG_OP <= FLAG_OP_MC_CLEARD;
    11'b01011000000 : FLAG_OP <= FLAG_OP_MC_CLEARI;
    11'b10111000000 : FLAG_OP <= FLAG_OP_MC_CLEARV;
    11'b11001101100 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b11011101100 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b11011001100 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b11001001001 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b11000001110 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b11010001110 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b11000101011 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b11010101011 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b11101100100 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b11100000001 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b11100100011 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b11001100100 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b11000000001 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b11000100011 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b11001110100 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b11011110100 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b11000110011 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b11010110011 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b11001010000 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b10001000000 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b01001101100 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b01011101100 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b01011001100 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b01001001001 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b01000001110 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b01010001110 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b01000101011 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b01010101011 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b11101110100 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b11111110100 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b11100110011 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b11110110011 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b11101000000 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b11001000000 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b10101101100 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b10111101100 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b10111001100 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b10101001001 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b10100101011 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b10100001110 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b10110001110 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b10110101011 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b10101110100 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b10111110100 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b10100010001 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b10100110011 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b10110110011 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b10101100100 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b10111100100 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b10100000001 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b10100100011 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b10110100011 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b01001110100 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b01011110100 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b01001010000 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b01000110011 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b01010110011 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b00001101100 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b00011101100 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b00011001100 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b00001001001 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b00000001110 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b00010001110 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b00000101011 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b00010101011 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b01101000011 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b00101000011 : FLAG_OP <= FLAG_OP_MC_DIN;
    11'b00000011000 : FLAG_OP <= FLAG_OP_MC_SETI;
    11'b00101110100 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b00111110100 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b00101010000 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b00100110011 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b00110110011 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b01101110100 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b01111110100 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b01101010000 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b01100110011 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b01110110011 : FLAG_OP <= FLAG_OP_MC_NZC;
    11'b01000000011 : FLAG_OP <= FLAG_OP_MC_DIN;
    11'b11101101100 : FLAG_OP <= FLAG_OP_MC_NVZC;
    11'b11111101100 : FLAG_OP <= FLAG_OP_MC_NVZC;
    11'b11111001100 : FLAG_OP <= FLAG_OP_MC_NVZC;
    11'b11101001001 : FLAG_OP <= FLAG_OP_MC_NVZC;
    11'b11100001110 : FLAG_OP <= FLAG_OP_MC_NVZC;
    11'b11110001110 : FLAG_OP <= FLAG_OP_MC_NVZC;
    11'b11100101011 : FLAG_OP <= FLAG_OP_MC_NVZC;
    11'b11110101011 : FLAG_OP <= FLAG_OP_MC_NVZC;
    11'b00111000000 : FLAG_OP <= FLAG_OP_MC_SETC;
    11'b11111000000 : FLAG_OP <= FLAG_OP_MC_SETD;
    11'b01111000000 : FLAG_OP <= FLAG_OP_MC_SETI;
    11'b01000011101 : FLAG_OP <= FLAG_OP_MC_SETI;
    11'b00110011101 : FLAG_OP <= FLAG_OP_MC_SETI;
    11'b10101010000 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b10101000000 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b10111010000 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b10001010000 : FLAG_OP <= FLAG_OP_MC_NZ;
    11'b10011000000 : FLAG_OP <= FLAG_OP_MC_NZ;
    default         : FLAG_OP <= FLAG_OP_MC_NOP;
  endcase

endmodule

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
//--,Free-6502 Opcode Summary
//--  
//--,Neumonic,Addr Mode,Opcode,Original Clks,Free-6502 Clks,Flags
//--,ADC,"ABS",6D,4,5,NVZC
//--,ADC,"ABS,X",7D,4,5,NVZC
//--,ADC,"ABS,Y",79,4,5,NVZC
//--,ADC,"IMM",69,2,3,NVZC
//--,ADC,"(IND,X)",61,6,7,NVZC
//--,ADC,"(IND),Y",71,5,7,NVZC
//--,ADC,"Z-PAGE",65,3,4,NVZC
//--,ADC,"Z-PAGE,X",75,4,4,NVZC
//--,AND,"ABS",2D,4,5,NZ
//--,AND,"ABS,X",3D,4,5,NZ
//--,AND,"ABS,Y",39,4,5,NZ
//--,AND,"IMM",29,2,3,NZ
//--,AND,"(IND,X)",21,6,7,NZ
//--,AND,"(IND),Y",31,5,7,NZ
//--,AND,"Z-PAGE",25,3,4,NZ
//--,AND,"Z-PAGE,X",35,4,4,NZ
//--,ASL,"ABS",0E,6,8,NZC
//--,ASL,"ABS,X",1E,7,8,NZC
//--,ASL,"ACC",0A,2,2,NZC
//--,ASL,"Z-PAGE",06,5,7,NZC
//--,ASL,"Z-PAGE,X",16,6,7,NZC
//--,BCC,"REL",90,2,4,
//--,BCS,"REL",B0,2,4,
//--,BEQ,"REL",F0,2,4,
//--,BIT,"ABS",2C,4,5,BIT
//--,BIT,"Z-PAGE",24,3,4,BIT
//--,BMI,"REL",30,2,4,
//--,BNE,"REL",D0,2,4,
//--,BPL,"REL",10,2,4,
//--,BRK,"IMP",00,7,7,SETI
//--,BVC,"REL",50,2,4,
//--,BVS,"REL",70,2,4,
//--,CLC,"IMP",18,2,2,CLEARC
//--,CLD,"IMP",D8,2,2,CLEARD
//--,CLI,"IMP",58,2,2,CLEARI
//--,CLV,"IMP",B8,2,2,CLEARV
//--,CMP,"ABS",CD,4,5,NZC
//--,CMP,"ABS,X",DD,4,5,NZC
//--,CMP,"ABS,Y",D9,4,5,NZC
//--,CMP,"IMM",C9,2,3,NZC
//--,CMP,"(IND,X)",C1,6,7,NZC
//--,CMP,"(IND),Y",D1,5,7,NZC
//--,CMP,"Z-PAGE",C5,3,4,NZC
//--,CMP,"Z-PAGE,X",D5,4,4,NZC
//--,CPX,"ABS",EC,4,5,NZC
//--,CPX,"IMM",E0,2,3,NZC
//--,CPX,"Z-PAGE",E4,3,4,NZC
//--,CPY,"ABS",CC,4,5,NZC
//--,CPY,"IMM",C0,2,3,NZC
//--,CPY,"Z-PAGE",C4,3,4,NZC
//--,DEC,"ABS",CE,6,8,NZ
//--,DEC,"ABS,X",DE,7,8,NZ
//--,DEC,"Z-PAGE",C6,5,7,NZ
//--,DEC,"Z-PAGE,X",D6,6,7,NZ
//--,DEX,"IMP",CA,2,2,NZ
//--,DEY,"IMP",88,2,2,NZ
//--,EOR,"ABS",4D,4,5,NZ
//--,EOR,"ABS,X",5D,4,5,NZ
//--,EOR,"ABS,Y",59,4,5,NZ
//--,EOR,"IMM",49,2,3,NZ
//--,EOR,"(IND,X)",41,6,7,NZ
//--,EOR,"(IND),Y",51,5,7,NZ
//--,EOR,"Z-PAGE",45,3,4,NZ
//--,EOR,"Z-PAGE,X",55,4,4,NZ
//--,INC,"ABS",EE,6,8,NZ
//--,INC,"ABS,X",FE,7,8,NZ
//--,INC,"Z-PAGE",E6,5,7,NZ
//--,INC,"Z-PAGE,X",F6,6,7,NZ
//--,INX,"IMP",E8,2,2,NZ
//--,INY,"IMP",C8,2,2,NZ
//--,JMP,"ABS",4C,3,5,
//--,JMP,"(IND)",6C,5,8,
//--,JSR,"ABS",20,6,5,
//--,LDA,"ABS",AD,4,5,NZ
//--,LDA,"ABS,X",BD,4,5,NZ
//--,LDA,"ABS,Y",B9,4,5,NZ
//--,LDA,"IMM",A9,2,3,NZ
//--,LDA,"Z-PAGE",A5,4,4,NZ
//--,LDA,"(IND,X)",A1,6,7,NZ
//--,LDA,"(IND),Y",B1,5,7,NZ
//--,LDA,"Z-PAGE,X",B5,4,4,NZ
//--,LDX,"ABS",AE,4,5,NZ
//--,LDX,"ABS,Y",BE,4,5,NZ
//--,LDX,"IMM",A2,2,3,NZ
//--,LDX,"Z-PAGE",A6,3,4,NZ
//--,LDX,"Z-PAGE,Y",B6,4,4,NZ
//--,LDY,"ABS",AC,4,5,NZ
//--,LDY,"ABS,X",BC,4,5,NZ
//--,LDY,"IMM",A0,2,3,NZ
//--,LDY,"Z-PAGE",A4,3,4,NZ
//--,LDY,"Z-PAGE,X",B4,4,4,NZ
//--,LSR,"ABS",4E,6,8,NZC
//--,LSR,"ABS,X",5E,7,8,NZC
//--,LSR,"ACC",4A,2,2,NZC
//--,LSR,"Z-PAGE",46,5,7,NZC
//--,LSR,"Z-PAGE,X",56,6,7,NZC
//--,NOP,"IMP",EA,2,2,
//--,ORA,"ABS",0D,4,5,NZ
//--,ORA,"ABS,X",1D,4,5,NZ
//--,ORA,"ABS,Y",19,4,5,NZ
//--,ORA,"IMM",09,2,3,NZ
//--,ORA,"(IND,X)",01,6,7,NZ
//--,ORA,"(IND),Y",11,5,7,NZ
//--,ORA,"Z-PAGE",05,3,4,NZ
//--,ORA,"Z-PAGE,X",15,4,4,NZ
//--,PHA,"IMP",48,3,3,
//--,PHP,"IMP",08,3,3,
//--,PLA,"IMP",68,4,4,NZ
//--,PLP,"IMP",28,4,4,DIN
//--,RESET,"INTERNAL",03,0,6,SETI
//--,ROL,"ABS",2E,6,8,NZC
//--,ROL,"ABS,X",3E,7,8,NZC
//--,ROL,"ACC",2A,2,2,NZC
//--,ROL,"Z-PAGE",26,5,7,NZC
//--,ROL,"Z-PAGE,X",36,6,7,NZC
//--,ROR,"ABS",6E,6,8,NZC
//--,ROR,"ABS,X",7E,7,8,NZC
//--,ROR,"ACC",6A,2,2,NZC
//--,ROR,"Z-PAGE",66,5,7,NZC
//--,ROR,"Z-PAGE,X",76,6,7,NZC
//--,RTI,"IMP",40,6,8,DIN
//--,RTS,"IMP",60,6,8,
//--,SBC,"ABS",ED,4,5,NVZC
//--,SBC,"ABS,X",FD,4,5,NVZC
//--,SBC,"ABS,Y",F9,4,5,NVZC
//--,SBC,"IMM",E9,2,3,NVZC
//--,SBC,"(IND,X)",E1,6,7,NVZC
//--,SBC,"(IND),Y",F1,5,7,NVZC
//--,SBC,"Z-PAGE",E5,3,4,NVZC
//--,SBC,"Z-PAGE,X",F5,4,4,NVZC
//--,SEC,"IMP",38,2,2,SETC
//--,SED,"IMP",F8,2,2,SETD
//--,SEI,"IMP",78,2,2,SETI
//--,STA,"ABS",8D,4,5,
//--,STA,"ABS,Y",99,5,5,
//--,STA,"(IND,X)",81,6,7,
//--,STA,"(IND),Y",91,6,7,
//--,STA,"Z-PAGE",85,3,4,
//--,STA,"Z-PAGE,X",95,4,4,
//--,STA,"ABS,X",9D,5,5,
//--,S_IRQ,"INTERNAL",43,0,8,SETI
//--,S_NMI,"INTERNAL",33,0,8,SETI
//--,STX,"ABS",8E,4,5,
//--,STX,"Z-PAGE",86,3,4,
//--,STX,"Z-PAGE,Y",96,4,4,
//--,STY,"ABS",8C,4,5,
//--,STY,"Z-PAGE",84,3,4,
//--,STY,"Z-PAGE,X",94,4,4,
//--,TAX,"IMP",AA,2,2,NZ
//--,TAY,"IMP",A8,2,2,NZ
//--,TSX,"IMP",BA,2,2,NZ
//--,TXA,"IMP",8A,2,2,NZ
//--,TXS,"IMP",9A,2,2,
//--,TYA,"IMP",98,2,3,NZ
//--
//--
//----------------------------------------------------------------------------
//----------------------------------------------------------------------------



#define INS struct INSTRUCTION_S 
void to_next_instruction(INS *);
void set_zero_according_to_accumulator(INS *);
void set_negative_according_to_accumulator(INS *);
void set_overflow_according_to_accumulator(INS *);
void set_carry_according_to_accumulator(INS *);
void not_implemented(INS *);
void addressing_ABSOLUTE(INS *);
void addressing_ABSOLUTE_X(INS *);
void addressing_ABSOLUTE_Y(INS *);
void addressing_IMMEDIATE(INS *);
void addressing_INDIRECT_X(INS *);
void addressing_INDIRECT_Y(INS *);
void addressing_ZERO_PAGE(INS *);
void addressing_ZERO_PAGE_X(INS *);
void set_zero_according_to_internal_op(INS *);
void set_negative_according_to_internal_op(INS *);
void set_carry_according_to_internal_op(INS *);
void addressing_ACCUMULATOR(INS *);
void addressing_RELATIVE(INS *);
void set_zero_bit_according_to_AND(INS *);
void set_overflow_bit_to_mem_bit_6(INS *);
void set_negative_bit_to_mem_bit_7(INS *);
void not_sure_break_flag(INS *);
void addressing_IMPLIED(INS *);
void clear_carry(INS *);
void clear_decimal(INS *);
void clear_interrupt_disable(INS *);
void clear_overflow(INS *);
void not_sure_about_the_negative_flag(INS *);
void if_mem_equal_acc_set_zero_else_clear_zero(INS *);
void if_mem_less_or_equal_acc_set_cary_else_clear_carry(INS *);
void cmp_acc_and_mem(INS *);
void if_mem_equal_x_set_zero_else_clear_zero(INS *);
void if_mem_less_or_equal_x_set_cary_else_clear_carry(INS *);
void cmp_x_and_mem(INS *);
void if_mem_equal_y_set_zero_else_clear_zero(INS *);
void if_mem_less_or_equal_y_set_cary_else_clear_carry(INS *);
void cmp_y_and_mem(INS *);
void not_sure_how_to_set_zero(INS *);
void not_sure_how_to_set_negative(INS *);
void addressing_INDIRECT(INS *);
void addressing_ZERO_PAGE_Y(INS *);
void not_sure_how_to_set_carry_flag(INS *);
void unhandled_decimal_flag(INS *);
void not_sure_irq_flag(INS *);
void not_sure_how_to_set_overflow(INS *);
void addressing_INTERNAL(INS *);
void set_carry(INS *);
void set_decimal(INS *);
void set_interrupt_disable(INS *);

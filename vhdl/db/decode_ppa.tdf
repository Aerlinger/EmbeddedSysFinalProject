--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone II" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 12.1 cbx_cycloneii 2012:11:07:18:22:16:SJ cbx_lpm_add_sub 2012:11:07:18:22:16:SJ cbx_lpm_compare 2012:11:07:18:22:16:SJ cbx_lpm_decode 2012:11:07:18:22:16:SJ cbx_mgl 2012:11:07:18:24:04:SJ cbx_stratix 2012:11:07:18:22:16:SJ cbx_stratixii 2012:11:07:18:22:16:SJ  VERSION_END


-- Copyright (C) 1991-2012 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_ppa
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode1003w[3..0]	: WIRE;
	w_anode1013w[3..0]	: WIRE;
	w_anode1023w[3..0]	: WIRE;
	w_anode847w[1..0]	: WIRE;
	w_anode856w[3..0]	: WIRE;
	w_anode873w[3..0]	: WIRE;
	w_anode883w[3..0]	: WIRE;
	w_anode893w[3..0]	: WIRE;
	w_anode903w[3..0]	: WIRE;
	w_anode913w[3..0]	: WIRE;
	w_anode923w[3..0]	: WIRE;
	w_anode933w[3..0]	: WIRE;
	w_anode945w[1..0]	: WIRE;
	w_anode952w[3..0]	: WIRE;
	w_anode963w[3..0]	: WIRE;
	w_anode973w[3..0]	: WIRE;
	w_anode983w[3..0]	: WIRE;
	w_anode993w[3..0]	: WIRE;
	w_data845w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode1023w[3..3], w_anode1013w[3..3], w_anode1003w[3..3], w_anode993w[3..3], w_anode983w[3..3], w_anode973w[3..3], w_anode963w[3..3], w_anode952w[3..3]), ( w_anode933w[3..3], w_anode923w[3..3], w_anode913w[3..3], w_anode903w[3..3], w_anode893w[3..3], w_anode883w[3..3], w_anode873w[3..3], w_anode856w[3..3]));
	w_anode1003w[] = ( (w_anode1003w[2..2] & w_data845w[2..2]), (w_anode1003w[1..1] & (! w_data845w[1..1])), (w_anode1003w[0..0] & w_data845w[0..0]), w_anode945w[1..1]);
	w_anode1013w[] = ( (w_anode1013w[2..2] & w_data845w[2..2]), (w_anode1013w[1..1] & w_data845w[1..1]), (w_anode1013w[0..0] & (! w_data845w[0..0])), w_anode945w[1..1]);
	w_anode1023w[] = ( (w_anode1023w[2..2] & w_data845w[2..2]), (w_anode1023w[1..1] & w_data845w[1..1]), (w_anode1023w[0..0] & w_data845w[0..0]), w_anode945w[1..1]);
	w_anode847w[] = ( (w_anode847w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode856w[] = ( (w_anode856w[2..2] & (! w_data845w[2..2])), (w_anode856w[1..1] & (! w_data845w[1..1])), (w_anode856w[0..0] & (! w_data845w[0..0])), w_anode847w[1..1]);
	w_anode873w[] = ( (w_anode873w[2..2] & (! w_data845w[2..2])), (w_anode873w[1..1] & (! w_data845w[1..1])), (w_anode873w[0..0] & w_data845w[0..0]), w_anode847w[1..1]);
	w_anode883w[] = ( (w_anode883w[2..2] & (! w_data845w[2..2])), (w_anode883w[1..1] & w_data845w[1..1]), (w_anode883w[0..0] & (! w_data845w[0..0])), w_anode847w[1..1]);
	w_anode893w[] = ( (w_anode893w[2..2] & (! w_data845w[2..2])), (w_anode893w[1..1] & w_data845w[1..1]), (w_anode893w[0..0] & w_data845w[0..0]), w_anode847w[1..1]);
	w_anode903w[] = ( (w_anode903w[2..2] & w_data845w[2..2]), (w_anode903w[1..1] & (! w_data845w[1..1])), (w_anode903w[0..0] & (! w_data845w[0..0])), w_anode847w[1..1]);
	w_anode913w[] = ( (w_anode913w[2..2] & w_data845w[2..2]), (w_anode913w[1..1] & (! w_data845w[1..1])), (w_anode913w[0..0] & w_data845w[0..0]), w_anode847w[1..1]);
	w_anode923w[] = ( (w_anode923w[2..2] & w_data845w[2..2]), (w_anode923w[1..1] & w_data845w[1..1]), (w_anode923w[0..0] & (! w_data845w[0..0])), w_anode847w[1..1]);
	w_anode933w[] = ( (w_anode933w[2..2] & w_data845w[2..2]), (w_anode933w[1..1] & w_data845w[1..1]), (w_anode933w[0..0] & w_data845w[0..0]), w_anode847w[1..1]);
	w_anode945w[] = ( (w_anode945w[0..0] & data_wire[3..3]), enable_wire);
	w_anode952w[] = ( (w_anode952w[2..2] & (! w_data845w[2..2])), (w_anode952w[1..1] & (! w_data845w[1..1])), (w_anode952w[0..0] & (! w_data845w[0..0])), w_anode945w[1..1]);
	w_anode963w[] = ( (w_anode963w[2..2] & (! w_data845w[2..2])), (w_anode963w[1..1] & (! w_data845w[1..1])), (w_anode963w[0..0] & w_data845w[0..0]), w_anode945w[1..1]);
	w_anode973w[] = ( (w_anode973w[2..2] & (! w_data845w[2..2])), (w_anode973w[1..1] & w_data845w[1..1]), (w_anode973w[0..0] & (! w_data845w[0..0])), w_anode945w[1..1]);
	w_anode983w[] = ( (w_anode983w[2..2] & (! w_data845w[2..2])), (w_anode983w[1..1] & w_data845w[1..1]), (w_anode983w[0..0] & w_data845w[0..0]), w_anode945w[1..1]);
	w_anode993w[] = ( (w_anode993w[2..2] & w_data845w[2..2]), (w_anode993w[1..1] & (! w_data845w[1..1])), (w_anode993w[0..0] & (! w_data845w[0..0])), w_anode945w[1..1]);
	w_data845w[2..0] = data_wire[2..0];
END;
--VALID FILE

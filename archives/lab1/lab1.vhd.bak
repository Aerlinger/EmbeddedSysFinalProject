----------------------------------------------
-- Top-Level:
----------------------------------------------
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

-- Define pin structure:
entity lab1 is

	port (
		clock: in std_logic;
		key: in std_logic_vector(3 downto 0);
		hex4, hex5, hex6 : out std_logic_vector(6 downto 0)
	);

end lab1;


----------------------------------------------
-- RAM Module:
----------------------------------------------

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

-- Define pin structure:
entity raminfr is
	port (
		clk : in std_logic;
		we  : in std_logic;
		a   : in unsigned(3 downto 0);
		di  : in unsigned(7 downto 0);
		do  : out unsigned(7 downto 0)
	);
end raminfr;

-- Defines internal arcitecture:
architecture rtl of raminfr is
	type ram_type is array (0 to 15) of unsigned(7 downto 0);
	signal RAM : ram_type;
	signal read_a : unsigned(3 downto 0);

begin

	process (clk)
	begin
		if rising_edge(clk) then
			if we = '1' then
				RAM(to_integer(a)) <= di;
			end if;
			read_a <= a;
		end if;
	end process;

	do <= RAM(to_integer(read_a));

end rtl;


----------------------------------------------
-- Hex To 7 Segment Decoder
----------------------------------------------

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity hex7seg is
	port (input: in unsigned(3 downto 0);	-- Input is a 4 bit number
			output: out std_logic_vector(6 downto 0));	-- 7 bit output to light each of 7 segments
end hex7seg;

architecture combinational of hex7seg is
begin
	with input select output <=
		"0111111" when x"0", 
		"0000110" when x"1",
		"1011011" when x"2", 
		"1001111" when x"3",
		"1100110" when x"4", 
		"1101101" when x"5",
		"1111101" when x"6",
		"0000111" when x"7",
		"1111111" when x"8", 
		"1101111" when x"9",
		"1110111" when x"A", 
		"1111100" when x"B",
		"0111001" when x"C", 
		"1011110" when x"D",
		"1111001" when x"E", 
		"1110001" when x"F",
		"XXXXXXX" when others;

end combinational;